'Copyright (C) 2018  Intel Corporation. All rights reserved.
'Your use of Intel Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Intel Program License 
'Subscription Agreement, the Intel Quartus Prime License Agreement,
'the Intel FPGA IP License Agreement, or other applicable license
'agreement, including, without limitation, that your use is for
'the sole purpose of programming logic devices manufactured by
'Intel and sold by Intel or its authorized distributors.  Please
'refer to the applicable agreement for further details.

'Device #1: 10CL016Y - C:/arduino_mkr_vidor_4000/w3/test7_and4_gate/projects/MKRVIDOR4000_template/output_files/MKRVIDOR4000.sof Mon Oct 13 10:47:20 2025


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 18.1";
NOTE "DATE" "2025/10/13";
NOTE "DEVICE" "10CL016Y";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "MKRVIDOR4000.sof";
NOTE "TARGET" "1";
NOTE "IDCODE" "020F20DD";
NOTE "USERCODE" "000E5258";
NOTE "CHECKSUM" "000E5258";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A42, A93, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "68";
ACTION CONFIGURE = L20, DO_READ_USERCODE OPTIONAL, DO_HALT_ON_CHIP_CC OPTIONAL, DO_IGNORE_IDCODE_ERRORS OPTIONAL, DO_IGNORE_INTOSC_BYPASS RECOMMENDED, DO_BYPASS_SECOND_IDCODE_READ OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 1080;
INTEGER A60[1] = 409;
INTEGER A61[2] = 34545885, 1;
INTEGER A13[1] = 36;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 4087056;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 0;
INTEGER A174[2] = 0, 0;
INTEGER A92[1] = 0;
INTEGER A94[1] = 0;
BOOLEAN A95[1] = $0;
BOOLEAN A93[1] = $0;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A42[4087056] = @
Yky10u@@@@3q6aP86Zm6Gj@@t@@@l@tVVoZl_sFUybF@yhV_vt@ytF@z@V@tF@ud
V_nF@ypV@zd@_74x_@@Zj9Eu4knyF000000O1Ae2K85e8AG9KWAe0DG9100G028W
0902Y06G01088uHIWa81IXa6JKa4kK9QXH0Z1f3R00148Q8aa0IY4I08W02G00We
8L23U8IW1W8Y84H4H8Y8Y4rz0003CW16G028Wo6C00082H4H4014G0ICn8cO2H8X
4A8m0014GB05K1O0X4I8214G02e4aG29ukxkpT0000008014GW2Ae05G0r5y0W02
eSGOY3a858XV19o9aWGG15eW2gC290414W0208Fg20001v06yOo008Y84H4G1660
014W02G028W0014G0Y8YY1C0G014WCo86PaG4I8XIHCeAn04H4H703q0OGO23aIA
f85KG1Ae48JAXygA0014W0288hm00G01f364Y81W02iSc4o0OeAvaOc7ocC8To0G
014W000Y8K9Y1Zq6FIcC0OW16m00W826028Wi0KG5G20X4IG29aW4I81Cm03OCn4
cO2O03Cm06OW1CG0fB81W06Oj06GCn4ZO01KP53v8X0eW2IG114W02eaL3000X8a
G2n8ZCYH00WO2L04OW1Cm03OW16aH6P83Eu07SWiM8XeD6410XG0CavH200G028W
0IO8Hbk4004G4nmWCG604G2G014GQ06I1OW02e85LKH2AeW4qCpOcPcm4JCXG294
X4H4Y8Y04G018aG2H814GT0324OGA03I0GGE03I8mGZF3Y2zG4fAuX7Um3o83Pa1
GYa7Cm03OW16m03GGs63I1aWX6Q83Dm06OWPIAOW96P4ZCo0R1C85G290882W1cO
YPCpCpa0WWK36OY9W04G0H202Y0WG8W7YIaGUY7YzaWH6P4ZCo86P4WoEbGmE68W
0IG29aW4I8194GWK0I410XG0Cm2BiW5I819a0YP2FG6PaXCKG1Ae0YO2Fa9o001K
0fFC00KG1Ae08014GExipSsOZPin0AMK2vhC81014JCn8cTsnExiZTsP7pCpCc9c
Or0Oe9W1Cn4JOY8YqxoW8084zoWKJX4VA1014G0YAgG5L05OA14HaOB4C8JJ2Age
YKaPcnCpCBYW14JEv8dSoHEvaBYW7jpC8f03vgU0GY8IMX4G0G05goW8LCaFpWSP
6G8X4YGaH6o8ZCaH6PviC0G0DaX6QeyFCapn0m0Z8ZtCW8Y96n43aLH904GCX9cO
2I8X4a028fuIW8cO2JCXWrL6y0uWE09W0Y82H4H028W06PaHCY02I1a0YeW2KG11
JjC016O03C0iLI60CW0ACM2404GI1b0HW1cO2CaYmW826KUo0Y9cO4ZCoG6PaW4I
8X9cO2JCn4cOYPCpCpm4JCX9Y8gKM28YCooFOGoC3G4H6n8ZCAS63G29aW4G05rB
12H29P7C028W04G018WW2KG15oGm0OW16mW3Em17H8Y8YG5LKXAcP6pC3FuX7Un0
C0EuO3Rin6uX7UmZEwG7Toj_m0on17uW3AH9bK200000sP7xi3gnT6y0u0G1bLio
AhG5LKXAge2LK1LAG9045KW2A08Sq3fLU85G24H4H8YTsnExaZSo97H5LKYAY8XI
CWSo97vipkO06a1WXOA6qJn0KJDrecAgY8a0eW3Em17KW2Ae0DqG3QeX6qGJ829a
muoF00014W02000004I8X8K4H8Y8YIKH5D6W104GYG4H4HSn5duY8IdI3OZDsm6v
aZSoPMEd42xOG4X78dTsrunW836GEvWQCn3XXO04G0184JCY960n4J0140H4i42Q
QGMH6W02801JCX9c000000Cm03OG018W0m1EuW35KG1A4JCY9c0BYD85G2eW2AGX
5Mm2BW04G01uW3Em9dSLUCW4I819eWY82C44mWuL6028e05KGHWq7IJo004H4Y82
3OW16W02801288Qf14JCn8614acq028W0406O03CG1AeWY9cO2JCm06OW1Cm03I1
OGPJ38bKIHA8W04GG3QeX6o8ZCaH6P8ZCIG29a0KG15eW0Y829W2DqW6QW1Cm03G
014W0I819a7uW3E028W04G4H8Y82G014Y8OG403eW2AG1qG3Qen2MOX58X4IGAX4
aG2Aa281imYBSn5Nm3FyWdSoHEv86n4JCpDtScJCn8cOX8aG21faIAI11aKVI08W
16m0J4Y8Y86PaHCYfcoKJHOL33W000qVd18bKIHA28KjX1G014WmZFwn7H028W06
PaHCY02G01aW4I8XH6P4Z8X4aG218W02G15KW2Qe1DqO4ZCoe6RiHDo8ZOaHKW2A
e0Cm03OZDcn63Em17SY9cO4pfdwqJ5PmB38ICn8cOW3Sm17OW16mCpCcP6QHBjq2
7Sm1ExiZTsHcr4CWCKI9Af43OW1690G0Cm03Oyvd_yJCW16OWJEv4dOW1Cm0jq1C
8YW4W16O03aGAd03mAhiYr7VqZFkW5MOXSfOm03CW1Eu07S03OW16uipEpP00000
CGeFLOW1knDtSZDtSJRkvcsSp9Cn4JOZDsm6tTdxkRUpF@ycTsPDxaJQo9f4bKI9
eX6QGJDrecQe7vmWC0O0q03CW16O03Cm8cOYF0OW60C0m03CW12eEoCmOZDcn6RC
ZD61nTbGoF9OaH6n8ZCZPcP6tSpDkPrLjwghQrLNr8ZCYHsP7xipTH4aWPdTMpEx
ikzsRTxypR_vltztVlvdVUp3Dqf4m0eX6Um3FyH5O0gfcQKJDrAkuYLCm07HG2te
b04H4H86G0280HYMBX0@CG014W0G5LeYA9BMP0I294X428014GaUwfBTo83PaH3Q
eX6bKI9AXLMnAhaXCo83xipEs9ZCaHMPAhioqUxjhzoAJPbHMwB9W8YO6pCpCcPc
PC@ypU_PYY8BX82O0Y82GUKF4Wa16PaLjwghcB636PaHCowhRzrFpPdTcRkv6tSp
DkvcNzwhlwkxkpTl@ktV@CdTsPExipSsxld1G2F0SGA06uztVtxCpCcPceGqI8bi
4IVxXWuC89I6m8ZCYH6P4ZCEoCJ6O40085W4muhlwrNVT1W2ywh@wtV@rl@_hVV@
Tl@_hUzrNz_xlxzV@j503y@@@x@V@j803Y2m0@_xScRkvCtSpPEeWAD4309aG2I8
W04G8HMJ602eWAJ434G0180014W0o06OW1Cm03O028014018W02W0280Re1DqWBS
n5NuYBkm5cP6pCp06OW1DsOZQq5NuYBknDtSZhkwAN@xF@zdFyn7VyoBlu5tSB50
3yxl@wNVzbl_w3VyndWaCWSoDdvcREpCpCcPtTjxkoG6Pa9og70H4H8Y8m4cOYPE
B64ZJ200PaXCo4bFa18W02G01CYH6P4H4H4YU@zO6C8323oNmWS6OOlK3y@@l7uW
1ERinCsOpjYW1cRkvCtSxQtTtDNB6Yso0pC34W028Y8WXi2C04GWDin6RKH5LeY0
2G01IG29aWZEw8710WmyC8b03Y88XWAI8E23IAmWqAC0pC@_O46uzpEpPdDtI36O
kn6hn33ioAhObPcfyh4CpSpbcW1cPcPCpExOdTkrjtUhRlzMt214DWP0Cm03OG9b
eaoALPbLYIAf4bSo9EvaIKI9bOaH6n8X4YG296n4JC6PaHCIDrecQ2H8X4c2W18c
uNdbm0lo8ZH1OGa8COaH6n8xkRE26a5c16PanCsOZ5Hc11EOGI66ucRc95W7Yrn0
KG1duaJEH15KW2FzadUI1AeW2KH5LeYJEn9d45vG2XIPG_56KWX18W02GmOZrPY1
P9Q0000H8Y8YPcyWPcPcO2CmghkgLFv4dSoDH4aWPcPVxl@_kxkxStDtquX1_ztV
zxTtvkxu6tSpT4J6WAgu6tSpDweZEqH5LrCP0geYAKnCpTYOGY7FyzO2fHAHCJCG
4Hybl_wBVzrN_AY8PRb0nytV_xllp0O0VzrN_wh@ytV@J0WW80GW@_xF@vcRSpDt
B0KG506exkxMtSpTB09WRW0gSI604GG2I8XCOM62RmWW_C8n33m03lubNU9vD3Co
8pQsPdrF@yZVUv5lyoBUvbNywhlwrV_nF@yhV@zN@ypF_vl@ytV@wtV@rV@zd@_v
7@ypFf0OW@uaJSo9dB0K0Eva3Sm17PDn08W02G08WvGPGg9I47b1X3OWNU1WK0am
BlyYNUvt02CmFl_Q816ujtUpRl_gNVzDlzsRP5OWNUvjK0Cu0b4yoBlu5W0AJJ60
005eW2A8SNCG014W04H4Y8YO4C60000000ScpExChl_wM7H4h1m0Co8ZOSzrj_wl
xztVtwhlkrtVVxl@@_@@@j_whV0m0D0OGA06SXS2_tExOdTkpTtT700000sVVxl@
ShYmWvcRk4hU04o97va3YyeI05KWOA1Fa203G4H4XuhlwrNNrghkA6PaHCY8YG4H
aXCo8xrNVrhhlkrNVLhkwgsTtTjx_xR@zVT7c4ywhxQtTtDt46CpCpOcRlrjtEpU
W9OcPWAFg4014KYIAfK6PaXCm0ZyeC04G018AiG5M82hDbGMJ901Ev4dScW4I81g
fcQKpLNvgh8bsa1G8X4I181kwghflO0TqH7wCsO6RCncxp0YDo86P4NuYBk4p73v
4n0NSn5k08W04G03b8100WRSpDt0Cm03O01i603qQhjgLW16m0pCcPcP03Cm06Qe
1DqCd1W106Sm1Eu2JOX5cm2BCXPcPCpSpQkvcnExiZTW1E8f404Sm1EuYIKH55MO
X5i4G0HJQWG294X000LDd00OW1Cm0e05KG1AeW2qG29703m4JCX9W1EYW40OZDgn
61EYW4o7mWK2Cee938im2JOW1Eg03mExiZzdVspFFiX7UuOIPGG15aWQe1DqG028
W04JCn8c8YG4H4ICb98W0wHFzqZ8ZCIH6PaYCo84H4H8Y8YG4zrd_wBUn7VyYDsO
5RaHAo8v4dSo9eX6QGpDtucReZPo0mpDtP0O0eX6QG3Eu07SW3JmWNJI8CA3YIr0
3DqG6QeXCqG84sb1nKMXDsO3RSwfEzq3TuX7c203kyoBF0OW60Cml@_hVlzMtUxl
_ztVTvbNwIgf6rKp9EvaJKJDrecIAH9bMoIBjC503w4n0DsOZQaG2pcnWaSD0KG1
GqS60m028Cg482G05Gg128W040eW2KGP1Bim2MOX5i4JCY96SW3Eu8qG3LeaGI5g
6ecQgHDqIBQfb6qG3DH0O0QefErLNTgjsQLRTrfkwe1DqGJ0D6WAge4bKIPME6eo
Af05KGHEk60Ae2JOX5MuTCa1x30H018W02IG15CrD3W02hObLM100000Qe1Dq081
1O014MO2BiJSo9duZF_mdF_m7VuANTrLFzqJUoPdvip@vl@_ZNUv5lysRUxjNyoB
lubNUnB@yZV_v7@ypF@@@@_tRlvjtSZRkv6NSn5kW2g0uIWKG15eW2oqcC0414GG
g6a8i1XeQGQJ6W16QG3DqGgn6G4H0C5W4YRo0kwghSr5NuYB@wtV@bF_u3VUxDlz
chSrLNvcRknjV_nF@u3Vyn7_vdVypNVBinWOOCmF@CdvcRkW_C8SE3YyqWacC8FA
6028W04288Q56000819aG25KG1A05KW2wW6Sm1DuW3QGY96n438014GaIAf8Tm1D
uW3RuX7sX7Ue3dVUpF@acSo9DweZQqX7E503Ydm07UuW6Sm1pgm03DqOn4PWHUv5
lyo06OW1YQG2W023OW16o4n002O89Uy08X4IG28W04G6n8ZCAuW3MmExCdTMumEC
0mExCdTESX7UuHhPGtQ6e@_xN@SpDkvkTjtUxPhP0W0ACX5MO1GRGEM64ah15oQG
Y464A23TQPGijC4ib1DRP06PaHCo03H0W06OW9Cn4JOaH6nuRl5WZ1f0mG0EC465
3cPcPCphlwrN7Pxj4YQoWWND8B13I5ZXO4D03C0Gij9aFc1H0WGUr608WO4ZCoOM
rC08W02Gl_QOK9WH14W020K8268im2JOX5YG294zsRlwDcO4JCX8aG29203grD1X
qQhQjrGcsb1X4I8QlzsrUOXbcG20WH6J7m0CpCpO68WQssWC0O8506YVpWe0C8p4
3CqG0bnj142H4pdpWWWDG014nYA68Y02G01ae4JCH5KG1AeYAKH5HihY1Y8xibTs
LfgggI5LKXAge2LKHdwipELLLLfAkvECA6mDtNvghkIG15aW6RCZD600000oZI50
1q2MOX5IhW1014G0QW1w1s0Bim2MuoBRLn03Cm06OY9Cn4BOX5MmX7Uu103q0W1U
yn7zuX76102EymZTyn7xn7VqZ4JCY9cmKlI8wB3oapWKlI8US600cO2JC1e@@400
035Hi16000Yso04G018uW3Sm13CNi16OpDjvcNuYBkm17SW3Eu07SmZUyn7Tn5Nu
YF@qdVUXBku2NTrLkwpFzvdNvghko5NSXBkuYK0C8FA6G15KW2faAxR3oZ2ZqHV0
WFyW7Uu1Fym3HaoW6QeX306e103qTtThxkwINTre6RinO0CG3DqO609K5G2Qen6r
OZDk0G1H1OG_wm460C130MW107mWk00WcrSpDBhioIM00GZ4vaU16lKaskvFyX1C
000xEq_XHDQ700mCq10W@3_l@X@tlu@yF_@_a@hVvV08000020000000G0000000
0202000tzR0009WI0Iu8060002S4m3r2oGCS600108MW4Q481001Wl2y000400G0
0b08ngFC0I0083@4o8uXl2Iu8W7YrtWI3Ie@@4A1W100WTM000MMjYH4C8MBFE2u
Xq08fH0LcB0Ze2a0000n2u6S4m3n0aG60Cy503000suF000aG200000W0I02000T
YRG909G00WO4W7E2u1010071421400G09W0W02c6W1G2908W00E2O4W020P4m028
0aH0I000000WW0K00871a08W0I020171O08W28280000G0101402G0fdS38X00S4
G20000yS50qVHQFROG@5L4YH5zNWHH4IqVHE_YC0Mlw@ql_@yi@BVx@nx_Fyl@@E
y@k7@Vxo@p_y@hJ@lwr@dkz@eV@@vu@RU_@bh@Fvx@FE@V000WLr7O@@r9W00m@0
0mmz@7y@@1@@Vm@@7y@@1@@Vm@@tiT2L@Fl180Wal@V@Xy10000CU1euz@7k@@W@
@lyj@3_@@W@@Fu@@x@t0G000B0K00000004040000402S@V50900M0eWkeIuAI6Q
4m60001B0KGZ06bHWA0000b7004y@@1@@Vm@@N_s@1@@VvR@tM33z@RmxDOaV33z
@RGLYIq8WDltaGZ06LQm90OoI_Fu@_7_70201O3D001a0400O4I00189a00W4Y00
08G81009iW8WWG2200920421m0000O2I0119CX80W0Y0209O29001iW402OY0m00
0J8208W9f400aG20003PZ09W0I2B20421m040MG4GG81J95q8W12f0W0iW2W2Q2H
001C15W0q4I002O9911aq8W1z1yGZ0mW4G0eH0306G2GG8X82034P4405F18u@@3
_@@W@@Vu_@3_@@W@@Fu@@J_EV1000aYO02_@@Xtp7010WmO1WW@@Vu_@3_@@al@F
u@@3_@@W@@Vu_@3_@@W@@Fu@@BVx@W@@lyj@7_EXclJ0G08GptOCyj1DVRmC_6qZ
F3D2a3200mclJeH0ZADW4000Wo3006k@@W@@lyj@J__@Zp@luz@RhXX_@Duz6Col
XXPyDu8O9Q4mctRIeH0ZADu40CP9@7yV@3@301W0CX40W0I0200C290W0a4I00G2
H00048a00W4MG4GG8110W4102X0O0000C19WWW4cG40G0H01W4CX40W0Mm61C0m2
A00W94104maK200I8100WXiHW4G09X5102X0O020B8288aWfa2Q4m0XK0G0MG1G1
DX80W0cW2G0Q29001iaaW0IQ4mW_0UeH0OG280q8W1038188aG41028O3x2_@@W@
@Fu@@3_@@Xx@Fu@@J__@W@@@wpy100000ChCu@@7k@@W@@F@Z@3_@@W@@Fu@@3_@
@W@@Vu_@3_@@al@Vu_@3_@@W@@VuR6Q_sWXlDevRC0I00qyT20400Q_cX61o1040
GptCq8WHb6G20p3WW@@Fu@@3_@@b_buzxp5000GAY1uuy@lUDV04002Z50QhXX_@
Juz6Col9XxOIO8@7Q48dtRIeH0ZADW400maA100_Fu@_7uN90808WDK104G4G001
J8108WaW400YG20001X400am4a022I80820421m0G0000B8188am8a002G2808X9
4104m4K08Y0m0200C290W0iaI00G2H000C8b0W61C044GI408qAW18W0m4a022IO
AH1014140Im4I102O1905qq9W18WcG40G0JI9809X40006IIG09D2m32814000mW
K22G2O0bHW103818OaHWW0Gh@@AIF@S0yty1@@Vm@@FS@@1@@@vNv300000WnRm@
2jakk0OcC_Fu@W@NgA@O1WI1jUaAl0AD06jij3NgBvO1W7y4y@@1@@VotKr7Qf08
W00GvZ5y@@1@VLVib2WrPf@0_10IoFS@@1@@VvR@7y@LrPNA04sfXxlAJeecudA0
ycDptyVyDy30hNytU36_sWclDOuR3Q_63W400DVd0010WUyPeH060800r8WA0W00
Q_cXC2ifHWP00KUCS@@1@@VJBeM_6L0uV0Mk_@al@@uy@RhvX_@Duz6Col9XByne
HWSUl9X61CgqWJCP90yV0LnPRm@1YAHZ0e@X@904m8a002G2800W94104GaG200I
8100WWW400Ym2I02294H0WG80900m2Y022PR06G08XH8104W5K0G0J8208W9e000
cG20G0BPZ060O8beH030944Wam2A2048WWG2228eH03KI10r8W1A08W9e0KWcG20
G0B818Wc61C01a4Y000OGA11z1yGZ0m04000mGA1281C09WWW422Y0m0GGm6i300
EUFV00m0bZmGtt72000f@Vp000wYI008u@@hy@dT@d9uXqw@t300WjO500I__@Zp
@lyj@7k@@Y@rgE_D0000r@VW00WHq0004qzjz@B4008VJ300zFKN@@4200QHF00G
n@urVHW00W6P200Ky_@3t@@nxs300200085Y10WW@@Fu@y500XTS_LBN@Vot@dyz
@9V@@mz@7y@@5lxwmt6qyj13VRGptOCyj1DVRmmt6qyD3D2O300WWclPeH0ZADW4
00OU1@@Vm@@7y@@9V@@pn@dyz@jryG3j9yUJ5vtaGcxOq8GEltaGZ06LQm9ci40_
Fu@_7_d0G0hG30809W000cG40G0H29008X400022I0082B8188aG4102X0a000B8
288aW9a004G2G08XH8104W5K0G0J8208W9e000cG20G0BPZ060O8beH030944Wam
2A2048WWG2228eH03KI10r8W1A08W9e0KWcG20G0B818Wc61C01a4Y000OGA11z1
yGZ0m04000mGA1281C09WWW422G2O0H01ZK44W2F10WXx@Fu@@3_@@Xx@Fu@@J__
@Zp@lyj@7k@@ot_Fu@@7k@@W@@Fvx@3_@@W@@Fu@@7k@@W@@Fwt@3_@@Zxj70040
00eJe0001@@Vn@vB00Q6U000010WXlDevR36_sWclnOuR3Q_sWPyDe7V6Q4m6000
1DVpGZ06LQ090WQ26k@@W@@lyj@J__@Zp@luz@RhvX_@Duz6Col9XNyJu8u7Q48d
tRIeH0ZADu4JM20@7yV@3@J08WH8104W4G000J8208W8X400aG2000119004X5a0
44I8Y00XG0I00W54144os0CW0G2ZG2080Be0W0cG40G0JG100CX40W0Mo61C0mGA
HZ060I8809X5K408G01X444GGZ06ea20gH03K0G0JG1e0DX40W0MG2G0DD2O0289
4100mWK22w3uX61W18000WXK24G2O0I01194441W1WWWDO7004y@@1@@Vm@@7y@@
3t@Vm@@dyz@1@@Vm@@7y@@3t@Vm@@7y@@1@@Vm@@7y@@3t@Vm@@FS@@1@@Vot@FS
@@1@@Vm@@FyT2DVRmmt6qyD63VRGpt6Cyj1DVpGZ0s0008evR6Q4meI38100cNm@
@7y@@1@@Votv3W0000TYonv@NyU_00W00GpurMp3z@RmxDOaVJ2ludGHoFq8GElt
aGZ06LQm9ci40_Fu@_7_d0G0hG30809W000cG40G0H29008X400022I0082B8188
aG4102X0a000B8288aW9a004G2G08XH8104W5K0G0J8208W9e000cG20G0BPZ060
O8beH030944Wam2A2048WWG2228eH03KI10r8W1A08W9e0KWcG20G0B818Wc61C0
1a4Y000OGA11z1yGZ0m04000mGA1281C09WWW422G2O0H01ZK44W2F10WW@@Fu@@
3_@@Xx@Fu@@3_@@W@@lyj@3_@@ot_Fu@@3_@@W@@Fvx@3_@@W@@Fu@@7k@@W@@Fu
@@3_@@Xx@Fu@@3_@@XlJevR36_sWclnOuR3Q_sWXlDevR6Q4m60001DVpGZ06LQ0
900my6k@@W@@lyj@J__@Zp@luz@RhvX_@Duz6Col9XNyJOAo7Q48dtRIeH0ZADu4
JM20@7yV@3@J08WH8104W4G000J8208W8X400aG2000119004X5a044I8Y00XG0I
00W54144os0CW0G2ZG2080Be0W0cG40G0JG100CX40W0Mo61C0mGAHZ060I8809X
5K408G01X444GGZ06ea20gH03K0G0JG1e0DX40W0MG2G0DD2O02894100mWK22w3
uX61W18000WXK24G2O0I01194441W1WWWDO700CuX49VVE00GA43001@@@_3s300
0G0046M00WW@@Vu_@3_@@al@Fu@@3_@@W@@Vu_@3_@@W@@Fu@@BVx@W@@lyj@3_@
@W@@Fu@@J__@Xx@Fu@@3_@@XlJevR36_sWclnOuR3Q_sWXlDevR6Q4m60001DVpG
Z06LQ0900my2_@@W@@Fu@@J__@al@Fvx@RhvX_@Duz6Col9XIyJ87@7Q48dtRIeH
0ZADu4JM20@7yV@3@J08WLe104W4G000J8208W8X400aG2000119004X5a044I8Y
00XG0I00W54144Im4I0028180am8a002m2A08W94104m4K000J8108WbiH030CaI
q8W1W422GIO151024GG81114q8W1Af0WQ4m0504m4K0AGJ8108W5a04GJZ06W0I2
H000C8bWW_0UeH0O02000O8b01a06W4GGG21181CW8WWHA22GXd00Gm@@7y@@1@@
@mz@7y@@1@@Vm@@dyz@1@@Vot@7y@@3t@Vm@@dyz@1@@Vm@@7y@@3t@Vm@@7y@@1
@@@ppv3006ONP6I__@h@X70006U10WXlJevR36_sWclP0200m205CyT2DVRmDt64
qD3D2OK61f100wWD00mmz@7y@@blzVot@VS_@5l@VRDCq@l1ltmG_D9KXV2vtOmC
_6yU33D2OK61i1WGBy@W@xVuV0805e9a0W4I2G02eH81W4aaG24GI8201a0X44Wa
m2Y2A2988W4X5a0K4I8G09f99144aGG02GB9288aWfa2W4I2G08XH85W4a5K0KGJ
8209a9e04WcG20I8BPZ060P8beH0Zo8u7a020P4O0m0I1A2948W4m0a0A2I88m4j
1GvR@7y@@blzVm@@FS@@1@@Vot@7y@@1@@Vm@@FS@@1@@Vm@@7y@@9V@Vm@@dyz@
1@@@mz@7y@@9V@@mz@7y@@1@@@mt9qyT20201Q_cXXlDevR36_sWclDOuR3Q_cX6
1CAZWq000Tm6008u@@3_@@W@@FvRx1001000a2n00Got@FyU_20Wmm200qM33z@R
mxDCaVJ2BudG_D6aYl1ltmGZ06bH0R08q2@Fu@_7_702G1Q3D08Xa04W0Q4I0819
9a01a4Y0G09G81189iWeWYG2228HO1905X424GIQII011944W0qIY0229OAf08Xa
040IO4I181P1505q4Y0G2P2A01e9a0W4oIs8W1G6I9Q4meC2_19W0G6160CWKWYG
21281C09WYYC220IX04y@@1@@Vm@@FS@@1@@Vm@@7y@@blzVm@@N_s@1@@@mz@7y
@@9V@Vm@@7y@@1@@@mz@7y@@1@@Vm@@dyT_0000C0104y@@9V@@mt9qyT20201Q_
cXXlDevR36_sWclDOuR3Q_cX61CAZWq000Tm600Ou_@3_@@ot_Fvx@FE@@Yt@lj6
6w@tWtRO8@c4gmFXyRCO6V3UlXX61CAZ0s0Ge5_Vm@zFyF04W2q4I0G291801q8a
0G2II8128941W0IWG22GIO1H15X444GYm2I0A2948Waqaa022I8801eb4144ImKI
1G29180am8a2G2o2A0Ae941W4o4K02GJ8109abiH03WCaIq8WHP4y3I01WC2C0O0
f05X424G2O0I051944OYs0eyj@3_@@al@Fu@@7k@V00200G000200GG00O1W2000
0G00040002100W60C00W001000W0004000020200000800G306a103l0OG@@TTBe
1D0OmpW6i0G1800000G0q0W1P0a0W000400G0000G0001W08000040000100G00W
0Y1m040WUO5000W81006000000WWG00000GW0G410000W0W0800009GG1W100000
00e80010G4800m00000W0902000002a0n000001004010020HR481200WD2OK618
X0GWeqW402WGLQW100500eJG_VG200GW_Fm042I40000@FuP100002W1_Fm00S00
@7O00L5ZW@@Fu@@7k@@W@@Fu@@3_@@W@@Fu@@3_@@W@@Vu_@3_@@Yt@Fvuy10000
WuAzuv4000G4zi1008080001814uuP6W020SyS200aGYUs0020080G01014C5D3D
2OK61cnnD08u@@F_EX_7I00004042e_7I00000400XclJ00W4G@36Syj10aG0wV8
X61CAZWq000VQN008vyy100VfO00euz@7kFXzBI00004W4IWZxP028WG@@900G2P
@Y400W02G28uuU6Q4meC2C30Ujp_5@dyz@7d@Vnx@3010000WY009080IA2004W0
000a0800a40GAW0W4I00400G0a00I200bG2028000044420105GIG00W04004040
10XWG0G1aEYoW61O0WW4820WK12I1D2OK61@0G200f0222804W00Wb6mW8m3WMly
EZy4YAh2vo800000WI20004008100GI0000I8A00G4000W000H102808WI000100
08100K000024I000W08080G0G2004G2G1W0W00004020A000D2m00044XK0009G0
00X0q8WHP4m3G0X0002W00021084KQ030WYcv6004y@@1@@@nv@Ny_@3t@Vm@@7y
@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@Ny_@3t@Vm@@lSz@9V@@nv@
Ny_@3t@Vm@@7y@@9V@@nv@Ny_@3t@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm
@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@
Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1
@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@
@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7
y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@
@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@V
m@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@
@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@
1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y
@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@
7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm
@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@
Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@0
0G0N_VU00G020W@@zd@W@@Fu@@3_@@W@@Fu@@3_@@W@D0000uo@s30060100Gm@@
l@G_000mmB004y@@1@@Vm@@N_s@1@@Vm@@7y@@0000000Gi0G1z@R0W0GW50Au_V
30008i0G1z@R0009W50A00000000G0001B0KG@@6q8WHP4mcEi1WW@@Fu@@3_@@W
@@Fu@@3_@@_@Juz63ol9Xv@Puzc4ol9X_@D8@63w@dX61CAZ0p000XgG00u@W@xV
WV52W0eWsG50I8H0180DX40aGI2IG092904W44IW0I2JGAe88XW0a4MG4GH8111a
8ja4WWG21280D99WWW4cIK0I8H01W4CXK0aGMG2G1D290aWiW2W0Q2H08XC9bW0a
4I0G0P8R4meC2_11a020G0PGA1181CWADm0W1a0KCo8G0856y@@1@@Vm@@FS@@1@
@Vm@@7y@@1@dF02000q9A1@@Vm@v300200DZNm@@FS@@1@@Vot@7y@@1@@Vm@@FS
@@1@@Vm@@7y@@3t@Vm@@7y@@3VpGpt6Cyj1DVdmmt6qyT20900Q_E102008000R_
EX61CAZ0sqXD04y@@1@@VvR@dyz@7d@Vnx@l_V2ltOG_D9KVF3ltaG_D94Zl1vtO
GI_Cq8WHP4O6008qW@Ju@W@xVmU52W0eWcG40I8H0180DX40aGI2IG092904W44I
W0I2JGAe88XW0a4MG4GH8111a8ja4WWG21280D99WWW4cIK0I8H01W4CXK0aGMm6
1C0o2A02e941W4oaK22GI8101aXiH0Zo8u74G28001a1f44W4m0gq0306G2GH8X0
1JqMm@@7y@@1@@Vm@@FS@@1@@Vot@7y@@1@@Vm@@FS@@1@@Vm@@7y@@1@dF02000
q9A1@@Vm@v300200DZNm@@7y@@1@@Vot@FS@@1@@Vm@@FyD3DVRmmt6qyT23VRGp
t90a00evx40800W000ivx4Q4meC2OJ7s0Gm@@7y@@1@@VvR@VS_@blz@w@9yUZ1v
taGzzCyUJ2vtaGC_6aVZ19vpGZ06bHWP00WGL800yVm@zFml21G0KGRe209a8W04
WcG20I89198W4X402G229G09X985K4aGG0I2B82e8aWW0IaMI2GG8X014Wca4GGG
2J9A09a8W0G2cGA0I8B81eW6X40IGMG1G0DX80aGcaIG0I2908WCaD2OK61@W0I0
108WC8bW0a06Gb6O0m0I0A6P480a23_@@W@@Fu@@7k@@W@@Fu@@3_@@al@Fu@@J_
_@W@@Vu_@3_@@al@Fu@@3_@@W@@Vu_@3_@@W@@Fu@@J__@W@@Fvx@7_cXclDOuR3
Q_EXXlDevx40I00qyT20400G000syT2D2OK61if3R0Ou_@3_@@ot_Fvx@FE@@Yt@
Vz@4UlnWyRIe_U6Ul9XyRI86V3olnWayPeH0Zo8mC00Ge1@dm@1@t@WzA401G1DX
80aGY02G0Q2908Xa4aW0I4I08098a01a4cWKGHG21189iW8WYG2228HQ9901X424
G0QII0119Cbe0aGY0209O2f08XiWD2O0a5K04GJ8209a9f44WaG20283PZ06bHmF
8W4G00283I9809W1Kf160CW4WYG212cejal@Fu@@J__@W@@Vu_@3_@@Xx@Fu@@3_
@@W@@Vu_@3_@@W@@Fu@@3_@@W@p701400u4tW@@Fu@@7k@@W@@luz@NEEV000008
aA3_@@fR@Vu_@dkz@W@@Fu@@Nk_@al@@uy@10000G01uvUx1mhGDS@@1@@@mz@7y
@@hNzVm@yBW6G9u@@3_@@zB_F@Z@3_@@W@@Fu@@BVx@W@@Vu_@3_@@ZlP8wR3E_s
WelJuuR3Y_E1W400HVd00100400WHVdGZ06bHGQG800mXf0SUs@1@@Vm@@@ql19l
RFX96Wl3@V@Xy10000CU1e@@4UlnWyRIO_V6Ul9XyRIe@V3olnW_@PeH0Zo8mC00
GeA400_Fu@_7uNX080AeDK1W4I4G02GJ8109aaW44GYG20181X48Wam4a2A2I880
9X541K4IGG09IB9188aGW02GJI2888Xf45W4I4G081J8509a5a0KGZG2098Be08W
cG40I8JI9809X404G6o61CAZWVG09W004G6aIG0I03eI3C0O0905XC244NH1@@Vm
@gy3K5hemG@@nA0GuAu@@lz@ac7wj@VC40E74yFFBP2i04TyW@@Fu@@BVZV0C015
l@VvR@7y@@1@@Vnx@dyz@F@oF0Q6ldZ@Fu@@7k@@al@Fu@@3_@@Xx@Vu_@3_@@Xl
PevR36_sWclJOuR3Q_E1W400DVd00100400WDVdGZ06bH0Rwm60UE_@cd@lyjy1G
00mLW18vx@FE@@nx_Vz@4UlnWyRI8oTCUl9XyRI89V6Q4meC2C3004g210W@3_l@
Xy1G0Wf80405q4Y0G292801e9a0W4IIG228H81W0aWG24GIO2I151944Wam2Y0A2
988W4fba044I8G01e99144amKY2G29280aW9a2W4o2s8W1GMG1G0DX80aGcaIG0I
2908WCaD2OK61@W0I0108WC8bW0a06Gb6O0m0I0A294AGwMBU@@Xx@Fu@@3_@@Xx
@Fu@@pzFV04G00WJS3_@@W@@Fu@@FE@@nMDevVx10OysV0@00pA3_@@W@p701000
w4bzB_l_ay10010WCB8u@@7k@@W@@lyj@7k@@W@@Fu@@ZwsWXlDevR36_sWclJOu
R3Q_E1W400DVd00100400WDVdGZ06bH0RYLC0EFx@W@@Vvw@xECV1000IkA0_Ey@
n@uNpu1mw@9yUZ1vtaGzzCyUJ2vtaGC_6aVZ19vpGZ06bHWP00WGL800yVm@zFml
21G0KGR8209a8W04WcG20I89198W4X402G229G09X985K4aGG0I2B82e8aWW0IaM
I2GG8X014Wca4GGG2J9A09a8W0G2cGA0I8B81eW6X40IGMG1G0DX80aGcaIG0I29
08WCaD2OK61@W0I0108WC8bW0a06Gb6O0m0I0A6P48uzq2_@@eV@Fu@@RU_@bh@F
u@@3_@@al@luz@BVx@W@@@uy@BU@@al@@vO3Q_tU006lF7@Vm@@FS@@9V@Vm@@7y
@@3t@@mz@dyz@3VpGpt6Cyj1DVdmmt6qyT20900Q_E102008000R_EX61CAZ0sqX
D0ySy@DF@@ppvBW000Ci3Got@VS_@7d@@w@9yUZ1vtaGzzCyUJ2vtaGC_6aVZ19v
pGZ06bHWP00WGL800yVm@1@RG@3p300g7_080Af941W4I4G02GJ8109aaW44GYG2
0181X48Wam4a2A2I8809X541K4IGG09IB9188aGW02GJI2888Xf45W4I4G081J85
09a5a0KGZG2098Be08WcG40I8JI9809X404G6o61CAZWVG09W004G6aIG0I03eI3
C0O0905X424S449V@@mz@dyz@1@@@mz@7y@@000008W0ayjz0uV02_@@W@@Fu@@F
E@@oMDeuVx1m04CS@@1@@VvR@FS@@9V@Vm@@FS@@1@@VvR@FS@@1@@Vm@@FyD3DV
Rmmt6qyT23VRGpt90a00evx40800W000ivx4Q4meC2OJ7s0GvR@7y@@DF@Vot@dy
z@9V@@w@9aTF3ltaG_DCaXl1ltaG_D9aaF3D2OK61c1002LX00m@1@t@0@A401G1
jXA0aGY02G0Q2908Xa4aW0I4I08098a01a4cWKGHG21189iW8WYG2228HQ9901X4
24G0QII0119Cbe0aGY0209O2f08XiW4W2Q4I081P1501q4Y0G2PIA1189a0W0oGs
8WHP4y328140W0oWK22G2O0LQW10381eOaHW0GACu@@3_@@W@@Vu_@J__@W@@Fu@
@J__@Xx@Fvx@3_@@Xx@Fu@@J__@W@@Fu@@3_@@Xx@Fu@@3_@@W@@luz@7k@@al@V
uR6Q_sWXlDevx46_sWclJ0810Gpt90G000100Opt9q8WHP4mcEi1WXx@Fu@@BVx@
al@@uy@BU@@r@Juz63ol9XwxPuzc4ol9XOyD8@63IodX61CAZ0p000X6yV2@7yV@
3shG0405q4Y0G292801e9a0W4IIG228H81W0aWG24GIO2I151944Wam2Y0A2988W
4fba044I8G01e99144amKY2G29280aW9a2W4o2s8W1GMG1G0DX80aGcaIG0I2908
WCaD2OK61@W0I0108WC8bW0a06Gb6O0m0I0A2948OYs6k@@Xx@V@Xy10010WmO9u
@@7k@@W@@Fvxy10000WNXAu@@3_@@W@@Vu_@3_@@W@@Fu@@3_@@W@@Fu@@ZEDV00
0008kIFEF100047dd0100809W07dp04G0WZpJ00W4onv9W001404GmnvCq8WHP4O
67t0WW@@Vd_4wV81000G0G8WwV810000G004g_D100I0zFOmnz60G21e@X4Q4meC
2I300yfT10WeZp700ybY10Wcd@Vvw4sl81000G0I81Ukc18W02z@d0009azBI000
2809WWdhPeH0Zo8mC0urExNyVm@@7y@@1@@F0400000A20a0W08f800G02000G2W
00GI00f020I810G0001G208900K2908W0000GGG8040K0911002G00G0G0404221
05Gw8A3Q4W102IW800I5885q8WHP4y30900a2888W0G0200MQ03Y0F0QzoxI_Dez
@4Av@1vo800000WI20004008100GI0000I8A00G4000W000H102808WI00010008
100K000024I000W08080G0G2004G2G1W0W00004020A000D2m00044XK0009G000
X0q8WHP4m3G0X0002W00021084KQ030WYcv600Ky_@3t@Vm@@FS@@1@@Vm@@7y@@
3t@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@Ny_@3t@Vm@@lSz@9V@@nv@Ny
_@3t@Vm@@7y@@9V@@nv@Ny_@3t@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@
7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm
@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@
Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1
@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@
@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7
y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@
@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@V
m@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@
@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@
1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y
@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@
7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm
@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@00G
0N_VU00G020W@@zd@W@@Fu@@3_@@W@@Fu@@3_@@W@@Fu@@3_@V10Gpm3002_@@W@
@Fu@@BVx@W@@Fu@@3_@V00000008M0eW_@D0G08m205S@l10004M0eW_@D00W4m2
0500000000800WW50Ae@V3Q4meC2OJ7s0Gm@@7y@@1@@Vm@@7y@@blzV@@9yUZ1v
tamy@CyUJ2vtaG@@6aVZ1z@pGZ06bHWP00WGL800yVm@zFml21G0KGRe209a8W04
WcG20I89198W4X402G229G09X985K4aGG0I2B82e8aWW0IaMI2GG8X014Wca4GGG
2J9A09a8W0G2cGA0I8B81eW6X40IGMG1G0DX80aGcaIG0I2908WCaD2OK61@W0I0
108WC8bW0a06Gb6O0m0I0A6P480a23_@@W@@Fu@@7k@@W@@Fu@@3_@@W@@Fu@@J_
_@W@@Fu@@3_@@al@Fu@@3_@@W@@Vu_@3_@@W@@Fu@@NUcV0q9A1@@Vot@FyD3DVR
mmt6qyT23VRGpt90a00evx40800W000ivx4Q4meC2OJ7s0Gm@@7y@@blzVot@VS_
@5l@@w@9yUZ1vtaGzzCyUJ2vtaGC_6aVZ19vpGZ06bHWP00WG3_FX@3_l@1xL802
W2Q2H08X414W0q4I0G299811a8a0G0IG81289C1fWYW422GIO1H05X444GYqII02
2948W0qaa022IOAH18X4140Im4I1G2P1R4m08Be08WcG40I8JI9809X404G6o61C
AZWVG09W004G6aIG0I03eI3C0O0905X424CHRblzVm@@dyz@1@@Vm@@7y@@9V@Vm
@@7y@@1@@@mz@7y@@1@@Vm@@@Li19VRF0aYuW@@V@Xy10010WmO9u@@7k@@W@@Fv
x@7k@@W@@Fu@@7_cXclDOuR3Q_EXXlDevx40I00qyT20400G000syT2D2OK61if3
R08u@@3_@@W@@Fvx@J__@al@Vz@4UlnWyRIe_U6Ul9XyRI86V3olnWayPeH0Zo8m
C00GeA400_Fu@_7uNX080AeDK1W4I4G02GJ8109aaW44GYG20181X48Wam4a2A2I
8809X541K4IGG09IB9188aGW02GJI2888Xf45W4I4G081J8509a5a0KGZG2098Be
08WcG40I8JI9809X404G6o61CAZWVG09W004G6aIG0I03eI3C0O0905ZC240IX1@
@Vm@@7y@@3t@@pnv3000003GGm@@7y@@1@@Vm@@N_s@1@@@mz@7y@@9V@Vm@@7y@
@1@@@mz@7y@@1@@Vm@@@Tu@1@@Vsby30muTuR6Q_sWXlDevx46_sWclJ0810Gpt9
0G000100Opt9q8WHP4mcEi1WXx@Fu@@BVx@al@@uy@BU@@r@Juz63ol9XwxPuzc4
ol9XOyD8@63IodX61CAZ0p000X6yV2@7yV@3shG0405q4Y0G292801e9a0W4IIG2
28H81W0aWG24GIO2I151944Wam2Y0A2988W4fba044I8G01e99144amKY2G29280
aW9a2W4o2s8W1GMG1G0DX80aGcaIG0I2908WCaD2OK61@W0I0108WC8bW0a06Gb6
O0m0I0A2948OYs6kFV04000GAY7k@@l@o7004002ZbW@@Fu@@100W000400W0004
4000004400000WG0004000210000008B0K0040We0Cu203Q1mW60C8306U1mW_@r
wMG3Q0mWd1D8RG3G00000W0e103o0810100800W0000W000201G000080000200W
000143W1800QOA0000H200C00000001X00000W01W8200000101G0000IWW20300
00000GH0020W8G00W1000001I0400000481Y100002008020040Ys8G24000R4me
C2G21W0Hf19040Xgq0300A00GdWy@W400W0zVW184a80000_Vmp200004020102G
80250E0W@3C0WvZSm@@7y@@1@@Vm@@7y@@1@@Vm@@VS_@1@@Vm@@FSV_08000Gde
4y@@v_dF00800qCU3t@Vm@@7y@@1@@Vm@@7y@@1@@@k@CKyl1x_RGn@9ixl15@d0
G20WY@J0W000200mY@JeH0Zo8WDTO309V@@nv@Ny_@3t@Vm@@N_s@z@dmxD6aVJ2
p@pmxD9aVJ2z@Rmmv6q@F3D2OK61c1002LX00m@1@t@0@A401G1jXA0aGY02G0Q2
908Xa4aW0I4I08098a01a4cWKGHG21189iW8WYG2228HQ9901X424G0QII0119Cb
e0aGY0209O2f08XiW4W2Q4I081P1501q4Y0G2PIA1189a0W0oGs8WHP4y328140W
0oWK22G2O0LQW10381eOaHW0GASu_@3_@@W@@Vu_@3_@@W@@Fu@@3_@@Xx@Fvx@3
_@@Xx@Fu@@J__@W@@Fu@@3_@@Xx@Fu@@3_@@W@@VvP_1Gde4y@@9V@@mtCqyj13V
RGpt9Cyj1DVd0G20WclJ0W000200mclJeH0Zo8WDTO301@@Vm@@N_s@9V@@nv@Ny
_@h@dmxD6aVJ2rtpmxD9aVJ2nuRG_D6aaF3D2OK61c1002Du@4_Fu@_7iNX080Ae
941W4I4G02GJ8109aaW44GYG20181X48Wam4a2A2I8809X541K4IGG09IB9188aG
W02GJI2888Xf45W4I4G081J8509a5iH03WiW2W0Q2H08XC9bW0a4I0G0P8R4meC2
_11a020G0PGA1181CWADm0W1a0K4I8Gm4jL_s@1@@Vot@7y@@1@@Vm@@dyz@1@@V
m@@7y@@3t@Vm@@7y@@1@@@Nn6qylz0O022_@@z7o7004002ZbW@@Vu_@3_@@al@V
u_@3_@@W@@VuR6Q_sWXlDevx46_sWclJ0810Gpt90G000100Opt9q8WHP4mcEi1W
W@@Fu@@3_@@ot_Fvx@BVx@r@Juz63ol9XwxPuzc4ol9XOyD8@63IodX61CAZ0p00
0XgG00u@W@xVWV52W0eWsG50I8H0180DX40aGI2IG092904W44IW0I2JGAe88XW0
a4MG4GH8111a8ja4WWG21280D99WWW4cIK0I8H01W4CXK0aGMG2G1D290aWiW2W0
Q2H08XC9bW0a4I0G0P8R4meC2_11a020G0PGA1181CWADm0W1a0KCo8G0856y@@1
@@Vm@@FS@@1@@Vm@@7y@@9VdF0200085n1@@Vot@7y@@3t@Vm@@dyz@1@@Vm@@7y
@@3t@Vm@@7y@@1@@Vot@7y@@9V@@mtCqyj13VRGpt9Cyj1DVd0G20WclJ0W00020
0mclJeH0Zo8WDTO303t@Vm@@N_s@9V@@nv@Ny_@h@dmxD6aVJ2rtpmxD9aVJ2nuR
G_D6aaF3D2OK61c1002Du@4_Fu@_7iNX080Ae941W4I4G02GJ8109aaW44GYG201
81X48Wam4a2A2I8809X541K4IGG09IB9188aGW02GJI2888Xf45W4I4G081J8509
a5iH03WiW2W0Q2H08XC9bW0a4I0G0P8R4meC2_11a020G0PGA1181CWADm0W1a0K
4I8Gm4jL_s@1@@Vot@7y@@3t@Vm@@FS@@1@@Vm@@7y@@3t@Vm@@7y@@1@@Vm@@7y
@@1@@Vm@@FS@@1@@Vnx@lSS_00000G8L6y@@1@@@mz@7y@@1@@Vm@@lSz@9V@@nv
@30000W02Gnzp3W0200@3mmz@7y@@3t@Vm@@7y@@1@@Vm@@lse1D@FF0200085n1
@@@_3v300200XnIm@@7y@@1@@VvR@7y@@1@@Vm@@VyD3HVRmnt64zT27VRGqt90a
008wx40800W000Cwx4Q4meC2OJ7s0Gm@@7y@@1@@VnzvB000Gde0Gm@@@@0@Q6F0
w@FXtRC8@c4c@dXtRI8@c4w@tWyRCe@V6Q4meC2C3004g210W@3_l@1_L802W2Q3
L08X414W0q4I0G299811a8a0G0IG81289C1fWYW422GIO1H05X444GYqII022948
W0qaa022IOAH18X4140Im4I1G2P1905q8a0G2o2A02e941W4oaK22GI8101aXiH0
Zo8u74G28001a1f44W4m0gq0306G2Gn8Z01WKOm@@7y@@1@@@mz@7y@@1@@Virmt
@F30e1yAVx@W@@lyj@3_@@Xx@Fu@@J__@W@@Fu@@3_@@Xx@Fu@@JUEV000008UK2
_@@Xx@V@Y@3_@@XlPevR36_sWclJOuR3Q_E1W400DVd00100400WDVdGZ06bH0Rw
m606k@@W@@lyj@J__@Zp@luz@N@FXtRC8@c4gldXtRI8@c4YntWyRC89V6Q4meC2
C3004Qm@9yVm@zFOl21G0KGJ8209a8W04WcG20I89198W4X402G229G09X985K4a
GG0I2B82e8aWW0IaMI2GG8X014Wca4GGG2J9A09a8W0G2cGA0I8BOZ060P1501q4
Y0G2PIA1189a0W0oGs8WHP4y328140W0oWK22G2O0LQW10381e8aGWW9QBu@@3_@
@al@luz@7k@@W@@Fvx@3_@@W@@Fu@@7k@@W@@Fu@@3_@@plu70TYIm@@N_s@1@@V
m@@FS@@9V@@mz@7y@@1@@@mtCqyj13VRGpt9Cyj1DVd0G20WclJ0W000200mclJe
H0Zo8WDTO301@@Vm@@7y@@BzRmrtsR020uuy@tV8V04002Z50M@FXtRC8@c4gldX
tRI8@c4YntWyRC89V6Q4meC2C3004g210W@3_l@1_L802W2Q3L08X414W0q4I0G2
99811a8a0G0IG81289C1fWYW422GIO1H05X444GYqII022948W0qaa022IOAH18X
4140Im4I1G2P1905q8a0G2o2A02e941W4oaK22GI8101aXiH0Zo8u74G28001a1f
44W4m0gq0306G2Gn8Z01WKOm@@7y@@1@@@mz@7y@@1@@Vm@@N_s@1@@@tVy30muD
u@@7k@@W@@Fvx@3_@@W@@Fu@@7k@@W@@Fu@@3_@@Xxp701000w4bW@@Fu@y10010
WcnRuR6Q_sWXlDevx46_sWclJ0810Gpt90G000100Opt9q8WHP4mcEi1WXx@Fu@@
BVx@al@@uy@BU@@r@Juz63ol9XwxPuzc4ol9XOyD8@63IodX61CAZ0p000X6yV2@
7yV@3shG0405q4Y0G292801e9a0W4IIG228H81W0aWG24GIO2I151944Wam2Y0A2
988W4fba044I8G01e99144amKY2G29280aW9a2W4o2s8W1GMG1G0DX80aGcaIG0I
2908WCaD2OK61@W0I0108WC8bW0a06Gb6O0m0I0A2948OYs2_@@W@@lyj@3_@@Xx
@Fu@@J__@W@@Fu@@3_@@Xx@liL3U_tU0C011@@Vm@@7y@@1@@Vot@7y@@3t@Vm@@
dyz@3t@Vm@@7y@@3VpGpt6Cyj1DVdmmt6qyT20900Q_E102008000R_EX61CAZ0s
qXD0K_s@1@@Vm@@lyT_2000q9A0SS_@9V@@w@9yUZ1vtaGzzCyUJ2vtaGC_6aVZ1
9vpGZ06bHWP00WGL800yVm@zFml21G0KGRe209a8W04WcG20I89198W4X402G229
G09X985K4aGG0I2B82e8aWW0IaMI2GG8X014Wca4GGG2J9A09a8W0G2cGA0I8B81
eW6X40IGMG1G0DX80aGcaIG0I2908WCaD2OK61@W0I0108WC8bW0a06Gb6O0m0I0
A6P480a23_@@W@@Fu@@7k@@W@@Fu@@3_@@Xxp701000aYuXx@Fxoy10010WmO9u@
@3_@@W@@Fvx@3_@@W@@Fu@@7k@@W@@Fu@@3_@@Xx@Vu_@BVx@XlPevR36_sWclJO
uR3Q_E1W400DVd00100400WDVdGZ06bH0Rwm606k@@W@@lyj@J__@Zp@luz@N@FX
tRC8@c4gldXtRI8@c4YntWyRC89V6Q4meC2C3004Qm@9yVm@zFOl21G0KGJ8209a
8W04WcG20I89198W4X402G229G09X985K4aGG0I2B82e8aWW0IaMI2GG8X014Wca
4GGG2J9A09a8W0G2cGA0I8BOZ060P1501q4Y0G2PIA1189a0W0oGs8WHP4y32814
0W0oWK22G2O0LQW10381e8aGWW9Qhyj@3_@@al@Fu@@7k@@W@@Vu_@3_@@W@Rv_B
6w@VO8yR51@@@mz@lVn@1@@Vm@@7y@@1@@Vm@@7yFs7DH20QsuXx@Fu@@BU@@Xx@
Fu@@3_7xU_810bcomz@3000upS30004iNU24000AFtWFpDeyS30100S4G27eRmH0
L0000f9z4YJdXf1CO5T9g7m000G0tgdGSw6C20371OGi06ynU2800GwNF1000471
a0400eI3IeiT6_OdX4tD00toB0804X4000000WW0A000W040G02004X402G00W0a
02008W000m060941000008W8W08S4W100aK400801W0w8030014S4G24000Q48Xr
0CW0001814WZ0O0000981W040002800E2W140G071y0001a_@DeHW40280000G0I
09mH0CaHG271KH2z6yL03jqR04MliEBVeo_4o0WXO0U8z_4_2WX@WPe@@7_W8X6z
JO4W400000I00e@V66ZuXZ0gubR6U5mWekb0402m4594BG500080Gs7cVnU@7OGR
56aVn6pMmG_5gqzF3vNW10usnal@@uy@BU@@Xx@Fu@@7k@@W@@Fu@Sk6IY_@VBO9
9w@760O71_@@@F0OW60C8306Y10Zm0U0;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
BOOLEAN V189[80] = $80000000000000000000;
BOOLEAN V190[80] = $80010000000000000000;
BOOLEAN V192[80] = $00FF0000000000000000;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[1080];
BOOLEAN A45[1080];
BOOLEAN A30[1080];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V77 = 0;
INTEGER V78 = 0;
INTEGER V186;
INTEGER V187;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
INTEGER V188 = 0;
INTEGER V191 = 0;
BOOLEAN V233 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
BOOLEAN USE_REV0_PROG_ALG = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
BOOLEAN V230 = 0;
BOOLEAN V232 = 0;
BOOLEAN V393 = 0;
ENDDATA;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_HALT_ON_CHIP_CC USES TEMP_DATA;
V230 = 1;
ENDPROC;
PROCEDURE DO_IGNORE_IDCODE_ERRORS USES TEMP_DATA;
V232 = 1;
ENDPROC;
PROCEDURE DO_IGNORE_INTOSC_BYPASS USES TEMP_DATA;
V393 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_SECOND_IDCODE_READ USES TEMP_DATA;
A175 = 1;
ENDPROC;
PROCEDURE L20 USES TEMP_DATA;
V101 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L141, L1190,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
V3 = 0;
V4 = 32;
CALL L101;
IF (V2 == 0) THEN GOTO L28;
IF ((V42 == 0) && V101) THEN CALL L1190;
V3 = 0;
V4 = 32;
CALL L101;
IF ((V42 == 0) && V101) THEN CALL L141;
L28:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L85 USES DEVICE_DATA, TEMP_DATA, L88, L458 ;
IF (V233 || !V76 || (V42 != 0)) THEN GOTO L87;
A18[9..0] = $003;
V4 = 32;
CALL L458;
WAIT IDLE, 4096 CYCLES, 5 USEC, IDLE;
V233 = 1;
FOR i = 0 TO V1;
IF (A94[i] != 0) THEN
V191 = 1;
NEXT i;
IF(V191 == 1) THEN GOTO L86;
GOTO L87;
L86:
CALL L88;
L87:
ENDPROC;
PROCEDURE L88 USES DEVICE_DATA, TEMP_DATA, L458 ;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L91;
IF (A94[i] == 0) THEN GOTO L91;
V77 = 0;
V78 = 0;
V30 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L89;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A94[j];
L89:
NEXT j;
V31 = V30 + A94[i] - 1;
IF(V31 == V30) THEN GOTO L90;
PUSH i;
A18[9..0] = $00A;
CALL L458;
POP i;
PREDR V77;
POSTDR V78;
FOR j = 0 TO 100;
DRSCAN A94[i], A95[V31..V30], CAPTURE A45[79..0];
IF(A45[79] == 0) THEN j = 100;
NEXT j;
if(A45[79] == 0) THEN GOTO L90;
V42 = 12;
GOTO L92;
L90:
PREDR V77;
POSTDR V78;
DRSCAN 80, V192[79..0], CAPTURE A45[79..0];
L91:
NEXT i;
L92:
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L85
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
CALL L85;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
IF (V232 && (V42 != 0)) THEN
PRINT "IDCODE failures ignored";
IF (V232 && (V42 != 0)) THEN
V42 = 0;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L135 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = $00A;
CALL L458;
PREDR V77;
POSTDR V78;
DRSCAN 80, V189[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;
IF (A45[79] == 0) THEN GOTO L136;
V42 = 12;
GOTO L137;
L136:
PREDR V77;
POSTDR V78;
DRSCAN 80, V190[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;
IF (A45[79] == 0) THEN GOTO L137;
V42 = 12;
L137:
ENDPROC;
PROCEDURE L138 USES DEVICE_DATA, TEMP_DATA;
V188 = (V187 - V186)/80;
FOR i = 0 TO V188;
FOR j = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A93[(V186 + 79)..V186], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN j = 100;
NEXT j;
IF (A45[79] == 0) THEN GOTO L139;
V42 = 12;
i = V188;
GOTO L140;
L139:
V186 = V186 + 80;
L140:
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1190 USES DEVICE_DATA, TEMP_DATA, L458, L850, L1223;
push V91;
V91 = 1;
m = 0;
n = 0;
FOR i = 0 to V1;
IF ((A17[i] & 32) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
m = m + A25[i];
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 32) == 0 ||
(A17[j] & 4) == 0 ||
(A17[j] & 524288) == 0) THEN GOTO L1191;
A17[j] = A17[j] & ~8;
A31[m-1..0] = A30[m-1..0];
A31[n+9..n] = $006;
IRSCAN m, A31[m-1..0], CAPTURE A57[m-1..0];
STATE IDLE;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
call L1223;
IF (V42 != 0) THEN GOTO L1192;
IF A57[n+2] == 1 THEN GOTO L1192;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 3 CYCLES, IDLE;
DRSCAN 23 + V1, A29[22+V1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $307;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN V0, A29[V1..0], CAPTURE A31[V1..0];
IF (A31[j] == 0) THEN V42 = 10;
IF (A31[j] == 0) THEN GOTO L1192;
STATE IDLE;
FOR m = 0 to 3;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
i = A174[j * 2];
IF (m == 0) THEN i = i - ((A174[j * 2 + 1]/32) + 1);
IF (m == 1) THEN i = 14 * (A174[j * 2 + 1]/64);
IF (m == 3) THEN i = i + (A174[j * 2 + 1]/32);
CALL L850;
k = j;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
k = 23 + V1;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $3F4;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
A31[j+31..j] = $6C48A50F; 
IF (m == 1) THEN A31[j+31..j] = $FFF7FFFF; 
k = 32 + V1;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
A18[9..0] = $307;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN V0, A29[V1..0], CAPTURE A31[V1..0];
STATE IDLE;
IF (A31[j] == 0) THEN V42 = 10;
IF (V42 != 0) THEN m = 2;
NEXT m;
L1192:
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 1 CYCLES, 1000 USEC, IDLE;
A17[j] = A17[j] | 8;
L1191:
IF (V42 != 0) THEN j = V1;
n = n + A25[j];
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
pop V91;
ENDPROC;
PROCEDURE L141 USES DEVICE_DATA, TEMP_DATA, L107, L458, L138, L135;
PRINT "configuring SRAM device(s)...";
CALL L107;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L146;
V77 = 0;
V78 = 0;
V30 = 0;
V186 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L142;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A43[j];
IF (j < i) THEN V186 = V186 + A92[j];
L142:
NEXT j;
IF(A92[i] == 0) THEN
GOTO L143;
PUSH i;
CALL L135;
POP i;
V187 = V186 + A92[i] - 1;
PUSH i;
CALL L138;
POP i;
L143:
V31 = V30 + A43[i] - 1;
POSTDR V78;
PUSH i;
IF (((A147[i] & 2) == 0) ||
V393) THEN
GOTO L1094;
A18[9..0] = $2EE;
CALL L458;
L1094:
IF ((A17[i] & 64) == 0) THEN
GOTO L144;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
POP i;
PUSH i;
L144:
IF (((A17[i] & 128) == 0) || (V230 == 0)) THEN
GOTO L145;
A18[9..0] = $00D;
CALL L458;
WAIT 2500 USEC;
L145:
A18[9..0] = $002;
CALL L458;
FOR i = 0 TO 20;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
POP i;
DRSCAN A43[i], A42[V31..V30];
IF (USE_REV0_PROG_ALG) THEN DRSCAN 32, A30[31..0];
PUSH i;
A18[9..0] = $004;
CALL L458;
POP i;
PREDR V77;
POSTDR V78;
DRSCAN A59[i], A29[A59[i]-1..0], CAPTURE A45[A59[i]-1..0];
IF !A45[A60[i]] THEN V42 = 10;
PUSH i;
IF (((A147[i] & 2) == 0) ||
V393) THEN
GOTO L1095;
WAIT IDLE, 8192 CYCLES, 2048 USEC, IDLE;
A18[9..0] = $1EE;
CALL L458;
L1095:
CALL L107;
POP i;
L146:
NEXT i;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
IF (V42 != 0) THEN
GOTO L147;
V76 = 1;
L147:
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC 905D;
