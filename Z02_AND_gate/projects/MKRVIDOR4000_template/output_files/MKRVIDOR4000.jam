'Copyright (C) 2018  Intel Corporation. All rights reserved.
'Your use of Intel Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Intel Program License 
'Subscription Agreement, the Intel Quartus Prime License Agreement,
'the Intel FPGA IP License Agreement, or other applicable license
'agreement, including, without limitation, that your use is for
'the sole purpose of programming logic devices manufactured by
'Intel and sold by Intel or its authorized distributors.  Please
'refer to the applicable agreement for further details.

'Device #1: 10CL016Y - C:/arduino_mkr_vidor_4000/w3/test4_and_gate/projects/MKRVIDOR4000_template/output_files/MKRVIDOR4000.sof Tue Oct 07 20:16:08 2025


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 18.1";
NOTE "DATE" "2025/10/07";
NOTE "DEVICE" "10CL016Y";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "MKRVIDOR4000.sof";
NOTE "TARGET" "1";
NOTE "IDCODE" "020F20DD";
NOTE "USERCODE" "000E4E4D";
NOTE "CHECKSUM" "000E4E4D";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A42, A93, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "68";
ACTION CONFIGURE = L20, DO_READ_USERCODE OPTIONAL, DO_HALT_ON_CHIP_CC OPTIONAL, DO_IGNORE_IDCODE_ERRORS OPTIONAL, DO_IGNORE_INTOSC_BYPASS RECOMMENDED, DO_BYPASS_SECOND_IDCODE_READ OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 1080;
INTEGER A60[1] = 409;
INTEGER A61[2] = 34545885, 1;
INTEGER A13[1] = 36;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 4087056;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 0;
INTEGER A174[2] = 0, 0;
INTEGER A92[1] = 0;
INTEGER A94[1] = 0;
BOOLEAN A95[1] = $0;
BOOLEAN A93[1] = $0;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A42[4087056] = @
Yky10u@@@@3q6aP86Zm6Gj@@t@@@l@tVVpZ@_s7UybF@yh@_xd@ytF@z@V@tF@ud
V_nF@ypV@zd@_@BZ@@@Zj9Eu4knyF000000O1Ae2K85e8AG9KWAe0DG9100G028W
0902Y06G01088uHIWa81IXa6JKa4kK9QXH0Z1f3R00148Q8aa0IY4I08W02G00We
8L23U8IW1W8Y84H4H8Y8Y4rz0003CW16G028Wo6C00082H4H4014G0ICn8cO2H8X
4A8m0014GB05K1O0X4I8214G02e4aG29ukxkpT0000008014GW2Ae05G0r5y0W02
eSGOY3a858XV19o9aWGG15eW2gC290414W0208Fg20001v06yOo008Y84H4G1660
014W02G028W0014G0Y8YY1C0G014WCo86PaG4I8XIHCeAn04H4H703q0OGO23aIA
f85KG1Ae48JAXygA0014W0288hm00G01f364Y81W02iSc4o0OeAvaOc7ocC8To0G
014W000Y8K9Y1Zq6FIcC0OW16m00W826028Wi0KG5G20X4IG29aW4I81Cm03OCn4
cO2O03Cm06OW1CG0fB81W06Oj06GCn4ZO01KP53v8X0eW2IG114W02eaL3000X8a
G2n8ZCYH00WO2L04OW1Cm03OW16aH6P83Eu07SWiM8XeD6410XG0CavH200G028W
0IO8Hbk4004G4nmWCG604G2G014GQ06I1OW02e85LKH2AeW4qCpOcPcm4JCXG294
X4H4Y8Y04G018aG2H814GT0324OGA03I0GGE03I8mGZF3Y2zG4fAuX7Um3o83Pa1
GYa7Cm03OW16m03GGs63I1aWX6Q83Dm06OWPIAOW96P4ZCo0R1C85G290882W1cO
YPCpCpa0WWK36OY9W04G0H202Y0WG8W7YIaGUY7YzaWH6P4ZCo86P4WoEbGmE68W
0IG29aW4I8194GWK0I410XG0Cm2BiW5I819a0YP2FG6PaXCKG1Ae0YO2Fa9o001K
0fFC00KG1Ae08014GExipSsOZPin0AMK2vhC81014JCn8cTsnExiZTsP7pCpCc9c
Or0Oe9W1Cn4JOY8YqxoW8084zoWKJX4VA1014G0YAgG5L05OA14HaOB4C8JJ2Age
YKaPcnCpCBYW14JEv8dSoHEvaBYW7jpC8f03vgU0GY8IMX4G0G05goW8LCaFpWSP
6G8X4YGaH6o8ZCaH6PviC0G0DaX6QeyFCapn0m0Z8ZtCW8Y96n43aLH904GCX9cO
2I8X4a028fuIW8cO2JCXWrL6y0uWE09W0Y82H4H028W06PaHCY02I1a0YeW2KG11
JjC016O03C0iLI60CW0ACM2404GI1b0HW1cO2CaYmW826KUo0Y9cO4ZCoG6PaW4I
8X9cO2JCn4cOYPCpCpm4JCX9Y8gKM28YCooFOGoC3G4H6n8ZCAS63G29aW4G05rB
12H29P7C028W04G018WW2KG15oGm0OW16mW3Em17H8Y8YG5LKXAcP6pC3FuX7Un0
C0EuO3Rin6uX7UmZEwG7Toj_m0on17uW3AH9bK200000sP7xi3gnT6y0u0G1bLio
AhG5LKXAge2LK1LAG9045KW2A08Sq3fLU85G24H4H8YTsnExaZSo97H5LKYAY8XI
CWSo97vipkO06a1WXOA6qJn0KJDrecAgY8a0eW3Em17KW2Ae0DqG3QeX6qGJ829a
muoF00014W02000004I8X8K4H8Y8YIKH5D6W104GYG4H4HSn5duY8IdI3OZDsm6v
aZSoPMEd42xOG4X78dTsrunW836GEvWQCn3XXO04G0184JCY960n4J0140H4i42Q
QGMH6W02801JCX9c000000Cm03OG018W0m1EuW35KG1A4JCY9c0BYD85G2eW2AGX
5Mm2BW04G01uW3Em9dSLUCW4I819eWY82C44mWuL6028e05KGHWq7IJo004H4Y82
3OW16W02801288Qf14JCn8614acq028W0406O03CG1AeWY9cO2JCm06OW1Cm03I1
OGPJ38bKIHA8W04GG3QeX6o8ZCaH6P8ZCIG29a0KG15eW0Y829W2DqW6QW1Cm03G
014W0I819a7uW3E028W04G4H8Y82G014Y8OG403eW2AG1qG3Qen2MOX58X4IGAX4
aG2Aa281imYBSn5Nm3FyWdSoHEv86n4JCpDtScJCn8cOX8aG21faIAI11aKVI08W
16m0J4Y8Y86PaHCYfcoKJHOL33W000qVd18bKIHA28KjX1G014WmZFwn7H028W06
PaHCY02G01aW4I8XH6P4Z8X4aG218W02G15KW2Qe1DqO4ZCoe6RiHDo8ZOaHKW2A
e0Cm03OZDcn63Em17SY9cO4pfdwqJ5PmB38ICn8cOW3Sm17OW16mCpCcP6QHBjq2
7Sm1ExiZTsHcr4CWCKI9Af43OW1690G0Cm03Oyvd_yJCW16OWJEv4dOW1Cm0jq1C
8YW4W16O03aGAd03mAhiYr7VqZFkW5MOXSfOm03CW1Eu07S03OW16uipEpP00000
CGeFLOW1knDtSZDtSJRkvcsSp9Cn4JOZDsm6tTdxkRUpF@ycTsPDxaJQo9f4bKI9
eX6QGJDrecQe7vmWC0O0q03CW16O03Cm8cOYF0OW60C0m03CW12eEoCmOZDcn6RC
ZD61nTbGoF9OaH6n8ZCZPcP6tSpDkPrLjwghQrLNr8ZCYHsP7xipTH4aWPdTMpEx
ikzsRTxypR_vltztVlvdVUp3Dqf4m0eX6Um3FyH5O0gfcQKJDrAkuYLCm07HG2te
b04H4H86G0280HYMBX0@CG014W0G5LeYA9BMP0I294X428014GaUwfBTo83PaH3Q
eX6bKI9AXLMnAhaXCo83xipEs9ZCaHMPAhioqUxjhzoAJPbHMwB9W8YO6pCpCcPc
PC@ypU_PYY8BX82O0Y82GUKF4Wa16PaLjwghcB636PaHCowhRzrFpPdTcRkv6tSp
DkvcNzwhlwkxkpTl@ktV@CdTsPExipSsxld1G2F0SGA06uztVtxCpCcPceGqI8bi
4IVxXWuC89I6m8ZCYH6P4ZCEoCJ6O40085W4muhlwrNVT1W2ywh@wtV@rl@_hVV@
Tl@_hUzrNz_xlxzV@j503y@@@x@V@j803Y2m0@_xScRkvCtSpPEeWAD4309aG2I8
W04G8HMJ602eWAJ434G0180014W0o06OW1Cm03O028014018W02W0280Re1DqWBS
n5NuYBkm5cP6pCp06OW1DsOZQq5NuYBknDtSZhkwAN@xF@zdFyn7VyoBlu5tSB50
3yxl@wNVzbl_w3VyndWaCWSoDdvcREpCpCcPtTjxkoG6Pa9og70H4H8Y8m4cOYPE
B64ZJ200PaXCo4bFa18W02G01CYH6P4H4H4YU@zO6C8323oNmWS6OOlK3y@@l7uW
1ERinCsOpjYW1cRkvCtSxQtTtDNB6Yso0pC34W028Y8WXi2C04GWDin6RKH5LeY0
2G01IG29aWZEw8710WmyC8b03Y88XWAI8E23IAmWqAC0pC@_O46uzpEpPdDtI36O
kn6hn33ioAhObPcfyh4CpSpbcW1cPcPCpExOdTkrjtUhRlzMt214DWP0Cm03OG9b
eaoALPbLYIAf4bSo9EvaIKI9bOaH6n8X4YG296n4JC6PaHCIDrecQ2H8X4c2W18c
uNdbm0lo8ZH1OGa8COaH6n8xkRE26a5c16PanCsOZ5Hc11EOGI66ucRc95W7Yrn0
KG1duaJEH15KW2FzadUI1AeW2KH5LeYJEn9d45vG2XIPG_56KWX18W02GmOZrPY1
P9Q0000H8Y8YPcyWPcPcO2CmghkgLFv4dSoDH4aWPcPVxl@_kxkxStDtquX1_ztV
zxTtvkxu6tSpT4J6WAgu6tSpDweZEqH5LrCP0geYAKnCpTYOGY7FyzO2fHAHCJCG
4Hybl_wBVzrN_AY8PRb0nytV_xllp0O0VzrN_wh@ytV@J0WW80GW@_xF@vcRSpDt
B0KG506exkxMtSpTB09WRW0gSI604GG2I8XCOM62RmWW_C8n33m03lubNU9vD3Co
8pQsPdrF@yZVUv5lyoBUvbNywhlwrV_nF@yhV@zN@ypF_vl@ytV@wtV@rV@zd@_v
7@ypFf0OW@uaJSo9dB0K0Eva3Sm17PDn08W02G08WvGPGg9I47b1X3OWNU1WK0am
BlyYNUvt02CmFl_Q816ujtUpRl_gNVzDlzsRP5OWNUvjK0Cu0b4yoBlu5W0AJJ60
005eW2A8SNCG014W04H4Y8YO4C60000000ScpExChl_wM7H4h1m0Co8ZOSzrj_wl
xztVtwhlkrtVVxl@@_@@@j_whV0m0D0OGA06SXS2_tExOdTkpTtT700000sVVxl@
ShYmWvcRk4hU04o97va3YyeI05KWOA1Fa203G4H4XuhlwrNNrghkA6PaHCY8YG4H
aXCo8xrNVrhhlkrNVLhkwgsTtTjx_xR@zVT7c4ywhxQtTtDt46CpCpOcRlrjtEpU
W9OcPWAFg4014KYIAfK6PaXCm0ZyeC04G018AiG5M82hDbGMJ901Ev4dScW4I81g
fcQKpLNvgh8bsa1G8X4I181kwghflO0TqH7wCsO6RCncxp0YDo86P4NuYBk4p73v
4n0NSn5k08W04G03b8100WRSpDt0Cm03O01i603qQhjgLW16m0pCcPcP03Cm06Qe
1DqCd1W106Sm1Eu2JOX5cm2BCXPcPCpSpQkvcnExiZTW1E8f404Sm1EuYIKH55MO
X5i4G0HJQWG294X000LDd00OW1Cm0e05KG1AeW2qG29703m4JCX9W1EYW40OZDgn
61EYW4o7mWK2Cee938im2JOW1Eg03mExiZzdVspFFiX7UuOIPGG15aWQe1DqG028
W04JCn8c8YG4H4ICb98W0wHFzqZ8ZCIH6PaYCo84H4H8Y8YG4zrd_wBUn7VyYDsO
5RaHAo8v4dSo9eX6QGpDtucReZPo0mpDtP0O0eX6QG3Eu07SW3JmWNJI8CA3YIr0
3DqG6QeXCqG84sb1nKMXDsO3RSwfEzq3TuX7c203kyoBF0OW60Cml@_hVlzMtUxl
_ztVTvbNwIgf6rKp9EvaJKJDrecIAH9bMoIBjC503w4n0DsOZQaG2pcnWaSD0KG1
GqS60m028Cg482G05Gg128W040eW2KGP1Bim2MOX5i4JCY96SW3Eu8qG3LeaGI5g
6ecQgHDqIBQfb6qG3DH0O0QefErLNTgjsQLRTrfkwe1DqGJ0D6WAge4bKIPME6eo
Af05KGHEk60Ae2JOX5MuTCa1x30H018W02IG15CrD3W02hObLM100000Qe1Dq081
1O014MO2BiJSo9duZF_mdF_m7VuANTrLFzqJUoPdvip@vl@_ZNUv5lysRUxjNyoB
lubNUnB@yZV_v7@ypF@@@@_tRlvjtSZRkv6NSn5kW2g0uIWKG15eW2oqcC0414GG
g6a8i1XeQGQJ6W16QG3DqGgn6G4H0C5W4YRo0kwghSr5NuYB@wtV@bF_u3VUxDlz
chSrLNvcRknjV_nF@u3Vyn7_vdVypNVBinWOOCmF@CdvcRkW_C8SE3YyqWacC8FA
6028W04288Q56000819aG25KG1A05KW2wW6Sm1DuW3QGY96n438014GaIAf8Tm1D
uW3RuX7sX7Ue3dVUpF@acSo9DweZQqX7E503Ydm07UuW6Sm1pgm03DqOn4PWHUv5
lyo06OW1YQG2W023OW16o4n002O89Uy08X4IG28W04G6n8ZCAuW3MmExCdTMumEC
0mExCdTESX7UuHhPGtQ6e@_xN@SpDkvkTjtUxPhP0W0ACX5MO1GRGEM64ah15oQG
Y464A23TQPGijC4ib1DRP06PaHCo03H0W06OW9Cn4JOaH6nuRl5WZ1f0mG0EC465
3cPcPCphlwrN7Pxj4YQoWWND8B13I5ZXO4D03C0Gij9aFc1H0WGUr608WO4ZCoOM
rC08W02Gl_QOK9WH14W020K8268im2JOX5YG294zsRlwDcO4JCX8aG29203grD1X
qQhQjrGcsb1X4I8QlzsrUOXbcG20WH6J7m0CpCpO68WQssWC0O8506YVpWe0C8p4
3CqG0bnj142H4pdpWWWDG014nYA68Y02G01ae4JCH5KG1AeYAKH5HihY1Y8xibTs
LfgggI5LKXAge2LKHdwipELLLLfAkvECA6mDtNvghkIG15aW6RCZD600000oZI50
1q2MOX5IhW1014G0QW1w1s0Bim2MuoBRLn03Cm06OY9Cn4BOX5MmX7Uu103q0W1U
yn7zuX76102EymZTyn7xn7VqZ4JCY9cmKlI8wB3oapWKlI8US600cO2JC1e@@400
035Hi16000Yso04G018uW3Sm13CNi16OpDjvcNuYBkm17SW3Eu07SmZUyn7Tn5Nu
YF@qdVUXBku2NTrLkwpFzvdNvghko5NSXBkuYK0C8FA6G15KW2faAxR3oZ2ZqHV0
WFyW7Uu1Fym3HaoW6QeX306e103qTtThxkwINTre6RinO0CG3DqO609K5G2Qen6r
OZDk0G1H1OG_wm460C130MW107mWk00WcrSpDBhioIM00GZ4vaU16lKaskvFyX1C
000xEq_XHDQ700mCq10W@3_l@X@tlu@yF_@_a@hVvV08000020000000G0000000
0202000tzR0009WI0Iu8060002S4m3r2oGCS600108MW4Q481001Wl2y000400G0
0b08ngFC0I0083@4o8uXl2Iu8W7YrtWI3Ie@@4A1W100WTM000MMjYH4C8MBFE2u
Xq08fH0LcB0Ze2a0000n2u6S4m3n0aG60Cy503000suF000aG200000W0I02000T
YRG909G00WO4W7E2u1010071421400G09W0W02c6W1G2908W00E2O4W020P4m028
0aH0I000000WW0K00871a08W0I020171O08W28280000G0101402G0fdS38X00S4
G20000yS50qVHQFROG@5L4YH5zNWHH4IqVHE_YC0Mlw@ql_@yi@BVx@nx_Fyl@@E
y@k7@Vxo@p_y@hJ@lwr@dkz@eV@@vu@RU_@bh@Fvx@FE@V000WLr7O@@r9W00m@0
0mmz@7y@@1@@Vm@@7y@@1@@Vm@@tiT2L@Fl180Wal@V@Xy10000CU1euz@7k@@W@
@lyj@3_@@W@@Fu@@x@t0G000B0K00000004040000402S@V50900M0eWkeIuAI6Q
4m60001B0KGZ06bHWA0000b7004y@@1@@Vm@@N_s@1@@VvR@tM33z@RmxDOaV33z
@RGLYIq8WDltaGZ06LQm90OoI_Fu@_7_70201O3D001a0400O4I00189a00W4Y00
08G81009iW8WWG2200920421m0000O2I0119CX80W0Y0209O29001iW402OY0m00
0J8208W9f400aG20003PZ09W0I2B20421m040MG4GG81J95q8W12f0W0iW2W2Q2H
001C15W0q4I002O9911aq8W1z1yGZ0mW4G0eH0306G2GG8X82034P4405F18u@@3
_@@W@@Vu_@3_@@W@@Fu@@J_EV1000aYO02_@@Xtp7010WmO1WW@@Vu_@3_@@al@F
u@@3_@@W@@Vu_@3_@@W@@Fu@@BVx@W@@lyj@7_EXclJ0G08GptOCyj1DVRmC_6qZ
F3D2a3200mclJeH0ZADW4000Wo3006k@@W@@lyj@J__@Zp@luz@RhXX_@Duz6Col
XXPyDu8O9Q4mctRIeH0ZADu40CP9@7yV@3@301W0CX40W0I0200C290W0a4I00G2
H00048a00W4MG4GG8110W4102X0O0000C19WWW4cG40G0H01W4CX40W0Mm61C0m2
A00W94104maK200I8100WXiHW4G09X5102X0O020B8288aWfa2Q4m0XK0G0MG1G1
DX80W0cW2G0Q29001iaaW0IQ4mW_0UeH0OG280q8W1038188aG41028O3x2_@@W@
@Fu@@3_@@Xx@Fu@@J__@W@@Fu@@3_@@Xx@Fu@@3_@@W@@Fu@@3_@@W@@Fu@@7k@@
W@@Fvx@7k@@W@@Fu@@7_cXclDOuR3Q_63W400DVd0010WclPeHWS0010qyD3D2OK
f1a0my08u@@3_@@W@@VfV9U@_S1000aYO0EE@@z7i@@1346B0qM33z@dmxDOaVJ2
tnamG_Fq8GEltaGZ06LQ0900W9L200yVm@zFmlI0G0G0Re208W8W000cG20G0919
004X4000229008X98144aG0G40842W1W0000MG2GG8XH8104W4G0G2J8208W9e0G
41W1D2O0WbK200I8200W1f40q8W1WW0IY00XM1C0140cW4GGG2J9A08W8W0G2cGA
0G0B81eWcE1C01q4Y002OIA1189a000mGI228fH0UG09W00006aIG0I03eC2C0O0
901ZC24WYd1@@Vm@@7y@@3t@Vm@@7y@@1@@Vm@@7y@@FdnGs@m3Widf@V9wFKT0a
@q1@@Vm@j7xv30e9KJ__@W@@Fu@@l@WV0m4Y3t@Vm@@lyS_000000Oy6y@@l7zVm
@@7yFyVsp00SsoVxDOuR3Q_sWXlDevRC0I00qyT20400wndX61o1040GptCq8WHb
6KHnNF8bT18zCu3jd1nS501@@VvR@dyz@7d@Vnx@tM33z@dmxDOaVJ2leYHZ0vyU
J2D2OKf1a000cK900m@1j@OB3000sGE00q@0@A10101CX80W0Y0200O29001a4a0
0G4I00088a00W4cW4GGG210H0WG80602000O1901X4cs0C0am4Y002O2A04H0OGZ
060O9b00W4Y000OGA10D2O088Wa80GeL03G01W98144amKY2028280aW9a204m2I
0AefJ03G0DX80W0caIG0I29000CaaW0IQ4W74G28000W1f44W4m0AZ03Y0m04iXT
n6tU@@F0W188u@Y2o_J0020z@N10gZlLhPuvRu104Csumgz@750u5xrVaey@bQZ@
J0y9R1@@Vot@FS@@NVoF0c9bW@D_U8R0mhE71U8BdlD0CGYW@@Fu@@7k@@oto701
000aYuW@@Fu@y10010WmO9u@@7k@@W@@Fvx@BU@@Xx@Fu@@7_cXclDOuR3Q_63W4
00DVd0010WclPeHWS0010qyD3D2OKf1a0my08u@@3_@@W@@Fvx@Z_z@Xtp70000m
u5WsQOe@@4Ul1ZyRIu5LCQ48dhvPeH0ZAD8400maA100_Fu@_7uN90808WDK104G
4G000J8108WaW400YG20001X400am4a022I80820421m0G0000B8188am8a002G2
808X94104m4K08Y0mW61C0mIA10094100mWK20Q4m0GG09H0WGh06W020JG2888X
f4504G4G081J8508W5a0KGJd06W0Q2H001C9bW0a4I000O8911aq80F8W4G00003
I9809W1K6160CW4WWH612GnpYt@Vu_@3_@@Xx@Fu@@FE@@Yt@lyj@3_@@ot_Fu@@
7k@@W@@Fvx@3_@@W@@Fu@@7k@@W@@Fwt@3_@@Xxp701000w4bW@@Fu@y10010Wcn
xtU36_sWclDOuR3Q_63W400DVd0010WUyPeHWS0010qyD3D2OKf1aWQ20Ou_@3_@
@ot_Fvx@FE@@Yt@lj66w@FXtRm8@c4YntWZWbeHWSAtbX61CgqWG000Jg400u@W@
xVWVb0W0W0cG40G0H0100CX40W0I2I0082900044I00G2JG2888X0W80G8403010
00iW4WWG2JR060IO2H001C150Y80CeH030iaI00G2H000C8b0W61C044GI408qAW
18W0m4a022IOAH1014140Im4I102O1905qq9W18WcG40G0JI9809X40006IIG09D
2m32814000mWK22G2O0bHW1H0O02smkW@@Fu@@3_@@W@@Vu_@3_@@al@Fu@@3_@@
W@@Vu_@3_@@W@@Fu@@3_@@W@@Vu_@3_@@Xx@Fu@@J__@Xx@Fu@@3_@@XlPevR36_
sWcln0810Gpt90G00evR6Q4870G00DVpGZ06LQ090CF02_@@W@@Fu@@N_EV1000w
450EE@@@7uNpu1GRDCq@V2ltWH_D9S7J23v@GZ0vyUJ2D2OKf1a000cK900m@1@t
@0@A10101iXA0W0Y0200O29001a4a00G4I00088a00W4cW4GGG210H0WG8060200
0O1901X46X40G0I0109CX80W0cW20H406q8W10MI9008X80006aI0GZ060228920
4Q5m04G0O2I0119Cbe0W0Y0209O2f001iW4W2Qw4m04GJ8208W9f44WaG2000399
8Wa61u11a02000OGA1181CWo8m0W1a04Co8G0AU6y@@1@@Vm@@FS@@1@@Vm@@7y@
@blzVm@@N_s@1@@Vm@@7y@@9V@Vm@@7y@@1@@@mz@7y@@1@@Vm@@FS@@1@@Vm@@F
yD3DVRmmt6qyD60900Q_E10200DVpGZ0v0020evR6Q4meI381Wv1mmz@7y@@blzV
ot@VS_@5l@VRDCq@V2ltWH_D9S7J23v@GZ0vyUJ2D2OKf1a000cK900m@1@t@0@A
10101CX80W0Y0200O29001a4a00G4I00088a00W4cW4GGG210H0WG80602000O19
01X4cs0C0am4Y002O2A04H0OGZ060O9b00W4Y000OGA10D2O088Wa80GeL03G01W
98144amKY2028280aW9a204m2I0AefJ03G0DX80W0caIG0I29000CaaW0IQ4W74G
28000W1f44W4m0AZ03Y0m04iXT3UKHotd30f8Eu@@tV8V00G008CM2_@@Xx@Fu@@
J__@W@@Fu@@3_@@Xx@Fu@@3_@@W@@lyj@3_@@ot_Fu@@3_@@W@@Fvx@7k@@W@@Fu
@@7_cXclDOuR3Q_63W400DVd0010WclPeHWS0010qyD3D2OKf1a0my08u@@3_@@W
@@Fvx@J__@al@lj66w@FXtRm8@c4kZ9XSyVeHWSUl9X61Cgq0I000Jg400u@W@xV
WVb0W0W0sG50G0H0100CX40W0I2I0082900044I00G2JG2888X0W80G840301000
iW4WWG2ZG20809W0W4cG40G0JG1W8203Q4m00Bf400aG40003I90eH03011a4102
j2O0280C19WWW4cIK0G0H01W4CXK0W0MG2G1DT2O02e94104maK22GI8100WXa44
GIZ0yW0I01000C8bW0a06GP4O0m0I026P4805F3_@@W@@Fu@@7k@@W@@Fu@@3_@@
al@Fu@@J__@W@@Vu_@3_@@al@Fu@@3_@@W@@Vu_@3_@@W@@Fu@@J_EV00000O022
_@@z7u70WnxmtCqyj13VRGpt9000GO1W26_cXclDucR32wcX61CAZWq0G7sCS@@1
@@VvR@dyz@7d@Vnx@d_V2vtOG@@6yU33vtam5_9yUZ1ruRmxDCq8WHP4mcGB4W@3
_l@X@905q8a0G2I2802e941W4IaG22GI8101aWW44GYm2I1A2948Wam4a0A2I880
9fb4144IGG01GB9188amea2G2I2808X945W4o4K0AGJ8109a5iH03WiaIW0I2H08
WC8bWW61CAZWV02080P8b01a06WKGHG21181CW8WYG222cGR00GvR@7y@@blzVm@
@FS@@1@@Vot@7y@@1@@Vm@@FS@@1@@Vm@@7y@@9V@Vm@@dyz@1@@@mz@7y@@9V@@
mz@7y@@1@@@mt9qyj13VRGptC0100evx46_sWclDOuR3Q_cX61CAZWq0G7s4y@@1
@@Vm@@dyT_08000WK4dyz@3ldF0080046Bf@dG_D6q@l1ltmG_D9qWV2ltOmA_6y
U33D2OK61i9q21u@W@xVuV2G1j2D0aWa02W0Q2H08X49aW0a4I0G098811a8iWKW
YG21289C19WYW422GIQ9H01X444G0qII0229CAf0aWa020IO2H18XC15W2q4I0G2
P1R4m08Bf48WaG40283I98eH0Zo8u7W002G6I9G09W185K4aGG0I0382eOaYW0Gs
l8XW@@Fu@@BU@@Xx@Fu@@3_@@al@lyj@J__@ot_Fvx@FE@@al@Fvx@3_@@W@@luz
@7k@@W@@Fu@@J__@fxd700CmHpCayz@9Vd@mt6qyj13VRGptC0100evx46_sWclD
OuR3Q_cX61CAZWq0G7sCS@@1@@VvR@dyz@7d@Vnx@d_V2vtOG@@6yU33vtam5_9y
UZ1ruRmxDCq8WHP4mcGB4W@3_l@X@905q8a0G2I2802e941W4IaG22GI8101aWW4
4GYm2I1A2948Wam4a0A2I8809fb4144IGG01GB9188amea2G2I2808X945W4o4K0
AGJ8109a5iH03WiaIW0I2H08WC8bWW61CAZWV02080P8b01a06WKGHG21181CW8W
YG222cGR00GvR@7y@@9V@Vm@@FS@@0100800W00044000m20500040002000H000
00D0O0G0GWe0Cu203000Wa@d1D0OG609y2W1z@tLFb6q0W18000o6q00G00000WQ
0mWC0I00010080001000W000401C2W10800040080208603e7h00004H00m00000
0044400000240a80000040401000824A0O00000000A10800Y0200600000881W0
0000GW4G60000800W0800G0Gq00eHW40808q8WHP4W4800WI3C00W0Of19000T2a
00m@160000y@03W0XW82000W01m@1C3Y000001W1G00002WW2W36Tm000egm0002
_@@W@@Vu_@3_@@W@@Fu@@3_@@W@@Fu@@3_@@Xx@Fu@@BU@@aZj70000008Eb2007
Fd08W0WZdJ0G09Gqp90100008Wmnp90000H810mnp600204W0GGqp9q8WHP4a60S
SZW@@l@@4010GqyT2020XwV8XZlDe@X4000W80G2fvR300002009i@X4Q4meC2Op
dx2GovyxhY1euz@x@F1G014z@d0W0IezBO008Wmnz90000H8X4mmz90G09O@26Q4
meC2C300ubT00WzB_Fvx@FE@@Ytv7w0800000e408201GaI00014000W4020W410
I180aG40W0002W40GI00e4I0G01000W0XG0G0e0Y42008W0001W0G084840A09W4
eHW700WW8G200f12IZ06bHmF01G200f0242808W0Gf1CWW8mhrBlx@tWxnP8gC60
GkC200000ea0000100I000a4000W8a20081000800WK0W0402G900W0000a000A0
0001X400080402080a000141K080800001W0W20q803I0001I8500G2400GOZ06b
H0F044GG00W0G000X002204mI3OGpk1Gm@@7y@@7d@Vnx@FS@@1@@Vm@@7y@@1@@
Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vnx@FS@@1@@@or@dyz@7d@Vnx@FS@@1
@@Vm@@7y@@7d@Vnx@FS@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@
@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7
y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@
@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@V
m@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@
@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@
1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y
@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@
7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm
@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@
Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1
@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@
@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7
y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@30004W00mp
@pBW00m@00Gm@@7y@@1@@Vm@@7y@@1@@Vm@@30008_7x1000O0208u@@tV8V0000
0ZN02_@@W@@Fu@@BVx@W@@Fu@@3_@@_@D0400m205000000010100001W0t@R000
0X50Ae@V30081i0G1000000002008O1W2w@tW61CAZ0sqXD04y@@1@@Vm@@7y@@1
@@Vm@@t@V2ltOG_D9C@F3ltaG_D9q@l1vtOG@@Cq8WHP4O6008K5200@7yV@3yhG
0405q6g0G292801e9a0W4IIG228H81W0aWG24GIO2I151944Wam2Y0A2988W4fba
044I8G01e99144amKY2G29280aW9a2W4o2I0AeH81W4a5K04GJ8209a9f44WaG20
283PZ06bHmF8W4G00283I9809W1Kf160CW4WYH6120fmW@@Fu@@3_@@Xx@Fu@@3_
@@W@@Fu@y1G000WEH9u@@3_FV00G00ePy2_@@Xx@Fu@@J__@W@@Fu@@3_@@Xx@Fu
@@3_@@W@@Vu_@3_@@W@@VuR6Q_sWXlDevx46_sWclJ0810Gpt90G000100Opt9q8
WHP4mcEi1WW@@Fu@@BVx@al@@uy@BU@@r@Juz63ol9XwxPuzc4ol9XOyD8@63Iod
X61CAZ0p000X6yV2@7yV@3shG0405q4Y0G292801e9a0W4IIG228H81W0aWG24GI
O2I151944Wam2Y0A2988W4fba044I8G01e99144amKY2G29280aW9a2W4o2s8W1G
MG1G0DX80aGcaIG0I2908WCaD2OK61@W0I0108WC8bW0a06Gb6O0m0I0A2948OYs
2_@@W@@Fu@@3_@@Xx@Fu@@J__@W@@Fu@@3_@@Xx@Fu@@3_@@W@@Fu@y1G000WEH9
u@@3_FV00G00ePy2_@@W@@Fu@@J__@Xx@Fu@@3_@@XlPevR36_sWclJOuR3Q_E1W
400DVd00100400WDVdGZ06bH0Rwm602_@@W@@Fu@@BVx@Zp@lyj@N@FXtRC8@c4g
ldXtRI8@c4YntWyRC89V6Q4meC2C3004g210W@3_l@1_L802W2Q3L08X414W0q4I
0G299811a8a0G0IG81289C1fWYW422GIO1H05X444GYqII022948W0qaa022IOAH
18X4140Im4I1G2P1905q8a0G2o2A02e941W4oaK22GI8101aXiH0Zo8u74G28001
a1f44W4m0gq0306G2Gn8Z01WKOm@@7y@@1@@@mz@7y@@1@@Vm@@dyz@1@@Vot@7y
@@3t@Vm@@dyz@1@@Vm@@7y@@3t@Vm@@7y@@1@@Vot@7y@@9V@@mtCqyj13VRGpt9
Cyj1DVd0G20WclJ0W000200mclJeH0Zo8WDTO303t@Vm@@N_s@9V@@nv@Ny_@h@d
mxD6aVJ2rtpmxD9aVJ2nuRG_D6aaF3D2OK61c1002Du@4_Fu@_7iNX080Ae941W4
I4G02GJ8109aaW44GYG20181X48Wam4a2A2I8809X541K4IGG09IB9188aGW02GJ
I2888Xf45W4I4G081J8509a5iH03WiW2W0Q2H08XC9bW0a4I0G0P8R4meC2_11a0
20G0PGA1181CWADm0W1a0K4I8Gm4jbyz@1@@Vot@7y@@3t@Vm@@FS@@1@@Vm@@7y
@@3t@Vm@@7y@@1@@Vm@@7yV_08W000du6y@@1@@@mz@7y@@5l@@onv300000XKPm
@@FTx@3t@@qj@7y@@1@@@or@dyz@7d@F00000280FtRF0U5gXx@Fu@@7k@@W@@Vz
g@3_dV1q0A1@@Vm@@lVn@vVyVm@@7y@@1@@VvR@7y@@3t@Vm@@VyD3HVRmnt64zT
27VRGqt90a008wx40800W000Cwx4Q4meC2I32100EC5Wpp_Fu@@3_@@d_D8vTx9C
n0yTu@xFaF0000WnB0z@dmxD6aVJ2p@pmxD9aVJ2z@RG_D6q@F3D2OK61c1002LX
00m@1@t@0@A401G1jXA0aGY02G0Q2908Xa4aW0I4I08098a01a4cWKGHG21189iW
8WYG2228HQ9901X424G0QII0119Cbe0aGY0209O2f08XiW4W2Q4I081P1501q4Y0
G2PIA1189a0W0oGs8WHP4y328140W0oWK22G2O0LQW10381e8aHWWuAAu@@3_790
100z@@mAAFq@@a2eDA2_@@R@5gv1Hx@731COh1@VL76Lq@Fa2GXz2_@@W@@lyD_1
m04Ky_@blzVm@@7y@@5l@Vot@@yB@0ePyUE_@W@@Vu_@J__@W@@Fu@@7k@@Xx@Fu
@@7_cXclDOuR3Q_EXXlDevx40I00qyT20400G000syT2D2OK61if3R0uvu@RU_@o
to70100N16Wal@@uy@7lx@r@Juz63ol9XwxPuzc4ol9XOyD8@63IodX61CAZ0p00
0XgG00u@W@xV8V040OA201G1DX80aGY02G0Q2908Xa4aW0I4I08098a01a4cWKGH
G21189iW8WYG2228HQ9901X424G0QII0119Cbe0aGY0209O2f08XiWD2O0a5K04G
J8209a9f44WaG20283PZ06bHmF8W4G00283I9809W1Kf160CW4WYG2X2akrYt@Vu
_@3_@@W@@Vu_@3_@@S@p701400u4tW@@Fu@@3_@@Zp@ViL3Q_tU006lz7mF0mioW
@@Fu@y1G000WEHP@Y@hF9V00G008p22_@@Xx@Fu@@BVx@Xx@Fu@@3_@@ekDOuR3Q
_sWXlDevx46_sWclJ0810Gpt90G000100Opt9q8WHP4mcO53Wpp_Fu@@Nk_@k3pN
000Wah2Wl3@VyF_rCU0i_V2ltOG_D9KVF3ltaG_D94Zl1vtOGI_Cq8WHP4O6008K
5200@7yV@3yhG0405q6Y0G292801e9a0W4IIG228H81W0aWG24GIO2I151944Wam
2Y0A2988W4fba044I8G01e99144amKY2G29280aW9a2W4o2I0AeH81W4a5K04GJ8
209a9f44WaG20283PZ06bHmF8W4G00283I9809W1Kf160CW4WYH612UFjW@@Fwt@
3_@@cd@Vvw@3_@@W@@Fvx@BU@@ot_Fu@@FE@@Yt@Fvx@VEsWc@j70Wnxpn@7y@@3
t@Vot@7y@@1@@@mz@FS@@9V@@mtCqyj13VRGpt9Cyj1DVd0G20WclJ0W000200mc
lJeH0Zo8WDTO30F7@Vpp@@yS_280003x0ayz@7d@@nv@l_V2ltOG_D9KVF3ltaG_
D94Zl1vtOGI_Cq8WHP4O6008K5200@7yVm@6q@my00WwXF02WIQ2H08X414W0q4I
0G299811a8a0G0IG81289C1fWYW422GIO1H05X444GYqII022948W0qaa022IOAH
18X4140Im4I1G2P1905q8a0G2o2A02e941W4oaK22GI8101aXiH0Zo8u74G28001
a1f44W4m0gq0306G2GH8X0171Hot@FS@@9V@Vm@@FS@@1@@F000002809VRF0_7W
W@@Fu@@3_@@Zp@liL3A_tU0C013t@Vm@@N_s@3t@Vot@7y@@3t@Vm@@N_s@3t@Vm
@@7y@@3VpGpt6Cyj1DVdmmt6qyT20900Q_E102008000R_EX61CAZ0sqXD0K_s@1
@@Vpp@dyz@9V@Vot@l_V2PtpmxD9aV33PuRmxD9aVJ29vpGZ06bHWP00WGL800yV
m@zFml21G0KGRe209a8W04WcG20I89198W4X402G229G09X985K4aGG0I2B82e8a
WW0IaMI2GG8X014Wca4GGG2J9A09a8W0G2cGA0I8B81eW6X40IGMG1G0DX80aGca
IG0I2908WCaD2OK61@W0I0108WC8bW0a06Gb6O0m0I0A6P480a23_@@W@@Fu@@7k
@@al@Fu@@3_@@al@Vu_@J__@W@@Vu_@3_@@al@Fu@@3_@@W@@Vu_@3_@@W@@Fu@@
BU@@Xx@Fvx@7_cXclDOuR3Q_EXXlDevx40I00qyT20400G000syT2D2OK61if3R0
Ou_@3_@@ot_Fvx@FE@@Yt@Vz@4UlnWyRIe_U6Ul9XyRI86V3olnWayPeH0Zo8mC0
0Ge1@dm@1@t@WzA401G1DX80aGY02G0Q2908Xa4aW0I4I08098a01a4cWKGHG211
89iW8WYG2228HQ9901X424G0QII0119Cbe0aGY0209O2f08XiWD2O0a5K04GJ820
9a9f44WaG20283PZ06bHmF8W4G00283I9809W1Kf160CW4WYG212cejXx@Vu_@tV
8V00G008CM2_@@Xx@Fu@@J_EV00000uLe2_@@W@@Fu@@7k@@W@@Fu@@3_@@W@@Fu
@@3_@@eJp700000YhqZpJ0000nnv9G0002G28mnvC0140uuy4008XSSU280G0101
4SSE3D2OK61cnnD08u@@tfFX_7I00004042e_7I00000400XgVJ00W4G@36SSl10
aG0wV8X61CAZWq000VQN008wuy100VfO00evv@NkEXzBI00004W4IWdhP028WG@@
900G2P@Y400W02G28uvQ6Q4meC2C30Ujp_5@7y@@1@@Vm@@3010000WY009080IA
2004W0000a0800a40GAW0W4I00400G0a00I200bG2028000044420105GIG00W04
00404010XWG0G1aEYoW61O0WW4820WK12I1D2OK61@0G200f0222804W00Wb6mW8
m3WMlykaV3Q@FXI_VGkC200000ea0000100I000a4000W4Y20041000800GK0W02
02e400G0000I0005000W0X400080202040a0001a0K080800001W0W200GZ0C000
1H8500G2400G80D2OK61y04G800W0800WG0021b6m00eePk1005l@@mz@7y@@3t@
Vm@@7y@@1@@@mz@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@5l@@mz@7y@@B
N@Vot@VS_@5l@@mz@7y@@1@@Vot@VS_@5l@@mz@7y@@1@@Vm@@7y@@1@@Vm@@7y@
@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7
y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@
@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@V
m@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@
@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@
1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y
@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@
7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm
@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@
Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1
@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@
@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7
y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@@7y@@1@@Vm@
@7y@@1@@F004mb@d7004W00u@V@vFu@@3_@@W@@Fu@@3_@@W@@Fu@@3_@@W@@N00
qCy00WW@@Fu@@3_@@ot_Fu@@3_@@W@@70000000Y50Ae@V30402i0G1t@R0000X5
0Ae@V30081i0G1000000002008O1W2w@tW61CAZ0sqXD04y@@1@@Vm@@7y@@1@@V
vR@t@V2ltOG_D9C@F3ltaG_D9q@l1vtOG@@Cq8WHP4O6008K5200@7yV@3yhG040
5q6g0G292801e9a0W4IIG228H81W0aWG24GIO2I151944Wam2Y0A2988W4fba044
I8G01e99144amKY2G29280aW9a2W4o2I0AeH81W4a5K04GJ8209a9f44WaG20283
PZ06bHmF8W4G00283I9809W1Kf160CW4WYH6120fmW@@Fu@@3_@@Xx@Fu@@3_@@W
@@Fu@@3_@@al@Fu@@3_@@W@@Fvx@3_@@W@@Fu@@7k@@W@@Fu@@3_@@bdv70TYIm@
@dyz@3VpGpt6Cyj1DVdmmt6qyT20900Q_E102008000R_EX61CAZ0sqXD04y@@1@
@VvR@dyz@7d@Vnx@l_V2ltOG_D9KVF3ltaG_D94Zl1vtOGI_Cq8WHP4O6008qW@J
u@W@xVmU52W0eWcG40I8H0180DX40aGI2IG092904W44IW0I2JGAe88XW0a4MG4G
H8111a8ja4WWG21280D99WWW4cIK0I8H01W4CXK0aGMm61C0o2A02e941W4oaK22
GI8101aXiH0Zo8u74G28001a1f44W4m0gq0306G2GH8X01JqMvR@7y@@9V@Vm@@7
y@@1@@Vot@7y@@1@@Vm@@FS@@1@@Vm@@7y@@V5RGots30f8Eu@@tV8V00G008CM2
_@@Xx@Fu@@J__@Xx@Fu@@3_@@XlPevR36_sWclJOuR3Q_E1W400DVd00100400WD
VdGZ06bH0Rwm602_@@W@@Fu@@J__@al@Fvx@N@FXtRC8@c4gldXtRI8@c4YntWyR
C89V6Q4meC2C3004g210W@3_l@1_L802W2Q3L08X414W0q4I0G299811a8a0G0IG
81289C1fWYW422GIO1H05X444GYqII022948W0qaa022IOAH18X4140Im4I1G2P1
905q8a0G2o2A02e941W4oaK22GI8101aXiH0Zo8u74G28001a1f44W4m0gq0306G
2Gn8Z01WKOm@@7y@@1@@@mz@@SS_00000m044y@@1@@Vm@@7y@@blzVm@@FS@@1@
@Vot@7y@@1@@Vm@@FS@@1@@Vm@@7y@@V7_Vm@@dT9@00CU7_cXclDOuR3Q_EXXlD
evx40I00qyT20400G000syT2D2OK61if3R0Ou_@3_@@ot_Fvx@FE@@Yt@Vz@4Uln
WyRIe_U6Ul9XyRI86V3olnWayPeH0Zo8mC00Ge1@dm@1@t@WzA401G1DX80aGY02
G0Q2908Xa4aW0I4I08098a01a4cWKGHG21189iW8WYG2228HQ9901X424G0QII01
19Cbe0aGY0209O2f08XiWD2O0a5K04GJ8209a9f44WaG20283PZ06bHmF8W4G002
83I9809W1Kf160CW4WYG212cejXxp701000aYuXx@@xly10010WmO9u@@3_@V000
800010080001100000110000084000100WG0000000o20500108A03k0mWM0Ce10
3o0WXN0Ce@Vjk5qW60CuPG3o6q040000080Q0mWC0I0G00020080000800W0G040
0002000W000800G0n0O020W6c2000Ga0003000000GG8000008G08Y00000G0G04
000W48e0m00000000K40W0082400O00000GW401000001IWO0000W0002W0001We
D2a0100m61CAZ0aG08GKQG201GeADm00W200q98@F81008G@7O02192000W@7yi0
00001W0G0W042WG1W30u@030O_87y@@1@@Vm@@7y@@1@@Vm@@7y@@7d@Vm@@7y@@
3tdF02000q9A1@@Vk@v300200DZtmz@7y@@1@@Vm@@7y@@1@@Vm@@lxF35@Rmk@6
KyV2x_RGn@90a00eu@40800W000iu@4Q4meC2OJ7s0Got@VS_@5l@@mz@7y@@blz
V@@9yUZ1vtamy@CyUJ2vtaG@@6CSk1z@pGZ06bHWP00WGL800yVm@zFml21G0KGR
e209a8W04WcG20I89198W4X402G229G09X985K4aGG0I2B82e8aWW0IaMI2GG8X0
14Wca4GGG2J9A09a8W0G2cGA0I8B81eW6X40IGMG1G0DX80aGcaIG0I2908WCaD2
OK61@W0I0108WC8bW0a06Gb6O0m0I0A6P480a27k@@W@@Fu@@7k@@W@@Fu@@3_@@
W@@Vu_@J__@W@@Vu_@3_@@al@Fu@@3_@@W@@Vu_@3_@@W@@Fu@@NUcV0q9A1@@Vo
t@FyD3DVRmmt6qyT23VRGpt90a00evx40800W000ivx4Q4meC2OJ7s0Gm@@7y@@b
lzVot@VS_@5l@@w@9yUZ1vtaGzzCyUJ2vtaGC_6aVZ19vpGZ06bHWP00WG3_FX@3
_l@1xL802W2Q2H08X414W0q4I0G299811a8a0G0IG81289C1fWYW422GIO1H05X4
44GYqII022948W0qaa022IOAH18X4140Im4I1G2P1R4m08Be08WcG40I8JI9809X
404G6o61CAZWVG09W004G6aIG0I03eI3C0O0905X424CHRblzVm@@dyz@1@@Vm@@
7y@@9V@Vm@@7y@@1@@@mz@7y@@1@@Vm@@@Li1D@RF06WWW@@V@Xy10010WmO9u@@
7k@@W@@Fvx@7k@@W@@Fu@@7_cXclDOuR3Q_EXXlDevx40I00qyT20400G000syT2
D2OK61if3R08u@@3_@@W@@lyj@J__@ot_Vz@4UlnWyRIe_U6Ul9XyRI86V3olnWa
yPeH0Zo8mC00GeA400_Fu@_7uNX080AeDK1W4I4G02GJ8109aaW44GYG20181X48
Wam4a2A2I8809X541K4IGG09IB9188aGW02GJI2888Xf45W4I4G081J8509a5a0K
GZG2098Be08WcG40I8JI9809X404G6o61CAZWVG09W004G6aIG0I03eI3C0O0905
ZC240IX1@@Vm@@7y@@3t@Vm@@7y@@1@@Votv3W0000IHSm@@dyz@1@@@mz@7y@@9
V@Vm@@7y@@1@@@mz@7y@@1@@Vm@@dyz@1@@Vot@FyD3DVRmmt6qyT23VRGpt90a0
0evx40800W000ivx4Q4meC2OJ7s0mmz@7y@@blzVot@VS_@5l@@w@9yUZ1vtaGzz
CyUJ2vtaGC_6aVZ19vpGZ06bHWP00WG3_FX@3_l@1xL802W2Q2H08X414W0q4I0G
299811a8a0G0IG81289C1fWYW422GIO1H05X444GYqII022948W0qaa022IOAH18
X4140Im4I1G2P1R4m08Be08WcG40I8JI9809X404G6o61CAZWVG09W004G6aIG0I
03eI3C0O0905X424CHRblzVm@@dyz@1@@@mz@7y@@3t@Vm@@7y@@1@@@mz@7y@@1
@@Vm@@7y@@1@@Vm@@7y@@3t@Vm@@Ny_@B7dF000004Ib1@@Vm@@FS@@1@@Vm@@7y
@@BN@Vot@VS_@000008W0KS@y08W00m@0CS@@1@@@mz@7y@@1@@Vm@@7y@@hDQGp
@p3W0000IHSm@@l@G_00W00GOi4y@@1@@Vm@@N_s@1@@Vm@@7y@@7VpGqt6Syj1H
Vdmnt64zT20900Y_E102008000Z_EX61CAZ0sqXD04y@@1@@Vm@@NSV_2000q9A0
4y@@@Fmlcn3W_@Juz63ol9Xv@Puzc4ol9X_@D8@63w@dX61CAZ0p000XgG00u@W@
xVWV52W0eWsG50I8H0180DX40aGI2IG092904W44IW0I2JGAe88XW0a4MG4GH811
1a8ja4WWG21280D99WWW4cIK0I8H01W4CXK0aGMG2G1D290aWiW2W0Q2H08XC9bW
0a4I0G0P8R4meC2_11a020G0PGA1181CWADm0W1a0KCo8G0856y@@1@@Vm@@FS@@
1@@Vm@@7RDyz@p00Q0lot_Fu@@BVx@W@@Vu_@3_@@al@Fu@@3_@@W@@Vu_@3_@@a
dp700000Y7bW@@Vu_@tlu@W@@VuR6Q_sWXlDevx46_sWclJ0810Gpt90G000100O
pt9q8WHP4mcEi1WXx@Fu@@BVx@al@@uy@BU@@r@Juz63ol9XwxPuzc4ol9XOyD8@
63IodX61CAZ0p000X6yV2@7yV@3shG0405q4Y0G292801e9a0W4IIG228H81W0aW
G24GIO2I151944Wam2Y0A2988W4fba044I8G01e99144amKY2G29280aW9a2W4o2
s8W1GMG1G0DX80aGcaIG0I2908WCaD2OK61@W0I0108WC8bW0a06Gb6O0m0I0A29
48OYs2_@@W@@Fvx@BU@@Xx@Fu@@J__@W@@Fu@@3_@@Xx@Fu@@3_@@W@@@yB_1Gde
4y@@blzVm@@7y@@3t@Vot@FS@@1@@Vm@@FyD3DVRmmt6qyT23VRGpt90a00evx40
800W000ivx4Q4meC2OJ7s0Gm@@7y@@1@@@I@6Szjz6W00EE@@z7o7010WmO1Wr@J
uz63ol9XwxPuzc4ol9XOyD8@63IodX61CAZ0p000XgG00u@W@xVWV52W0eWsG50I
8H0180DX40aGI2IG092904W44IW0I2JGAe88XW0a4MG4GH8111a8ja4WWG21280D
99WWW4cIK0I8H01W4CXK0aGMG2G1D290aWiW2W0Q2H08XC9bW0a4I0G0P8R4meC2
_11a020G0PGA1181CWADm0W1a0KCo8G0856y@@1@@Vm@@FS@@1@@Vm@@7y@@blzV
m@@@z7@00CU3_@@Xx@Fu@@J__@W@@Fu@@3_@@Xx@Fu@@3_@@W@@Vu_y1G000WEH9
u@@3_FV00G00ePy6_cXclDOuR3Q_EXXlDevx40I00qyT20400G000syT2D2OK61i
f3R0Ou_@3_@@ot_Fvx@FE@@Yt@Vz@4UlnWyRIe_U6Ul9XyRI86V3olnWayPeH0Zo
8mC00Ge1@dm@1@t@WzA401G1DX80aGY02G0Q2908Xa4aW0I4I08098a01a4cWKGH
G21189iW8WYG2228HQ9901X424G0QII0119Cbe0aGY0209O2f08XiWD2O0a5K04G
J8209a9f44WaG20283PZ06bHmF8W4G00283I9809W1Kf160CW4WYG212cejW@@Fu
@@BVx@W@@Vu_@3_@@al@Fu@@3_@@W@@Vu_@BRrWd@j703GGm@@7y@@1@@Vm@@dyz
@1@@@mz@7y@@9V@@mz@7y@@1@@@mtCqyj13VRGpt9Cyj1DVd0G20WclJ0W000200
mclJeH0Zo8WDTO30blzVm@@7y@@BVdl0000TY207d@Vot@l_V2ltOG_D9KVF3lta
G_D94Zl1vtOGI_Cq8WHP4O6008K5200@7yV@3yhG0405q6g0G292801e9a0W4IIG
228H81W0aWG24GIO2I151944Wam2Y0A2988W4fba044I8G01e99144amKY2G2928
0aW9a2W4o2I0AeH81W4a5K04GJ8209a9f44WaG20283PZ06bHmF8W4G00283I980
9W1Kf160CW4WYH6120fmW@@Fu@@3_@@Xx@Fu@@3_@@W@@Vu_y1G0000f8Uu_@pkC
V00G008CM2_@@W@@Fu@@J__@W@@Fu@@3_@@Xx@Fu@@3_@@W@@Vu_@7k@@ot_VuR6
Q_sWXlDevx46_sWclJ0810Gpt90G000100Opt9q8WHP4mcEi1WXx@Fu@@BVx@al@
@uy@BU@@r@Juz63ol9XwxPuzc4ol9XOyD8@63IodX61CAZ0p000X6yV2@7yV@3sh
G0405q4Y0G292801e9a0W4IIG228H81W0aWG24GIO2I151944Wam2Y0A2988W4fb
a044I8G01e99144amKY2G29280aW9a2W4o2s8W1GMG1G0DX80aGcaIG0I2908WCa
D2OK61@W0I0108WC8bW0a06Gb6O0m0I0A2948OYsAVx@W@@Fvx@3_@@Xx@Fu@@7k
@@W@@FuVaIJTrvEJ00czQm@p7uM20e916k@@zBcl@@40G0l5y@@1@@Vm@@7y@@1@
@VlFXt@@60ePZ7k@@W@@luz@7k@@W@@l_b@7k@V0000VcR000WWzoJW000Gvv6yP
k1bdR0800WZ0Iu0T3E2e20008DfdGSwCCDW1heBHMY60002uMz4YJtWH0OuJH3Y5
mWFsJ0100I@w9000Wu8W4W000LQG2bjpm7xCauk10uMU101W8a000000044G1000
4W002G00W8a0G02004W4G000140006m08X800000014140XZ0C00WaY0001804G7
1O008WWZ0IW000GZ09i6W1400809W0S40300081904W000G010mH0CW002u8W700
8Wq@l1D2a0G0100002G281E2WXC2Iu8WAIetWl2OebU3Wmwbz0v3LsdG60C43m3f
tdmN0Cy7C3z@@m749qeV2Z0a00000G200z@pmO4FS4G5lSpmh064rj4W0G0ce8XO
1g000010o_myBsx@03QhmWyBsOs26olGbk@P8@2C00tEcyz@7d@Vnx@FS@@1@@@m
z@7y@@1@dprGIqKiSz@@30iZ0@@@@70CG306a103n0WHO0F0;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
BOOLEAN V189[80] = $80000000000000000000;
BOOLEAN V190[80] = $80010000000000000000;
BOOLEAN V192[80] = $00FF0000000000000000;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[1080];
BOOLEAN A45[1080];
BOOLEAN A30[1080];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V77 = 0;
INTEGER V78 = 0;
INTEGER V186;
INTEGER V187;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
INTEGER V188 = 0;
INTEGER V191 = 0;
BOOLEAN V233 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
BOOLEAN USE_REV0_PROG_ALG = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
BOOLEAN V230 = 0;
BOOLEAN V232 = 0;
BOOLEAN V393 = 0;
ENDDATA;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_HALT_ON_CHIP_CC USES TEMP_DATA;
V230 = 1;
ENDPROC;
PROCEDURE DO_IGNORE_IDCODE_ERRORS USES TEMP_DATA;
V232 = 1;
ENDPROC;
PROCEDURE DO_IGNORE_INTOSC_BYPASS USES TEMP_DATA;
V393 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_SECOND_IDCODE_READ USES TEMP_DATA;
A175 = 1;
ENDPROC;
PROCEDURE L20 USES TEMP_DATA;
V101 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L141, L1190,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
V3 = 0;
V4 = 32;
CALL L101;
IF (V2 == 0) THEN GOTO L28;
IF ((V42 == 0) && V101) THEN CALL L1190;
V3 = 0;
V4 = 32;
CALL L101;
IF ((V42 == 0) && V101) THEN CALL L141;
L28:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L85 USES DEVICE_DATA, TEMP_DATA, L88, L458 ;
IF (V233 || !V76 || (V42 != 0)) THEN GOTO L87;
A18[9..0] = $003;
V4 = 32;
CALL L458;
WAIT IDLE, 4096 CYCLES, 5 USEC, IDLE;
V233 = 1;
FOR i = 0 TO V1;
IF (A94[i] != 0) THEN
V191 = 1;
NEXT i;
IF(V191 == 1) THEN GOTO L86;
GOTO L87;
L86:
CALL L88;
L87:
ENDPROC;
PROCEDURE L88 USES DEVICE_DATA, TEMP_DATA, L458 ;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L91;
IF (A94[i] == 0) THEN GOTO L91;
V77 = 0;
V78 = 0;
V30 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L89;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A94[j];
L89:
NEXT j;
V31 = V30 + A94[i] - 1;
IF(V31 == V30) THEN GOTO L90;
PUSH i;
A18[9..0] = $00A;
CALL L458;
POP i;
PREDR V77;
POSTDR V78;
FOR j = 0 TO 100;
DRSCAN A94[i], A95[V31..V30], CAPTURE A45[79..0];
IF(A45[79] == 0) THEN j = 100;
NEXT j;
if(A45[79] == 0) THEN GOTO L90;
V42 = 12;
GOTO L92;
L90:
PREDR V77;
POSTDR V78;
DRSCAN 80, V192[79..0], CAPTURE A45[79..0];
L91:
NEXT i;
L92:
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L85
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
CALL L85;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
IF (V232 && (V42 != 0)) THEN
PRINT "IDCODE failures ignored";
IF (V232 && (V42 != 0)) THEN
V42 = 0;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L135 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = $00A;
CALL L458;
PREDR V77;
POSTDR V78;
DRSCAN 80, V189[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;
IF (A45[79] == 0) THEN GOTO L136;
V42 = 12;
GOTO L137;
L136:
PREDR V77;
POSTDR V78;
DRSCAN 80, V190[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;
IF (A45[79] == 0) THEN GOTO L137;
V42 = 12;
L137:
ENDPROC;
PROCEDURE L138 USES DEVICE_DATA, TEMP_DATA;
V188 = (V187 - V186)/80;
FOR i = 0 TO V188;
FOR j = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A93[(V186 + 79)..V186], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN j = 100;
NEXT j;
IF (A45[79] == 0) THEN GOTO L139;
V42 = 12;
i = V188;
GOTO L140;
L139:
V186 = V186 + 80;
L140:
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1190 USES DEVICE_DATA, TEMP_DATA, L458, L850, L1223;
push V91;
V91 = 1;
m = 0;
n = 0;
FOR i = 0 to V1;
IF ((A17[i] & 32) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
m = m + A25[i];
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 32) == 0 ||
(A17[j] & 4) == 0 ||
(A17[j] & 524288) == 0) THEN GOTO L1191;
A17[j] = A17[j] & ~8;
A31[m-1..0] = A30[m-1..0];
A31[n+9..n] = $006;
IRSCAN m, A31[m-1..0], CAPTURE A57[m-1..0];
STATE IDLE;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
call L1223;
IF (V42 != 0) THEN GOTO L1192;
IF A57[n+2] == 1 THEN GOTO L1192;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 3 CYCLES, IDLE;
DRSCAN 23 + V1, A29[22+V1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $307;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN V0, A29[V1..0], CAPTURE A31[V1..0];
IF (A31[j] == 0) THEN V42 = 10;
IF (A31[j] == 0) THEN GOTO L1192;
STATE IDLE;
FOR m = 0 to 3;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
i = A174[j * 2];
IF (m == 0) THEN i = i - ((A174[j * 2 + 1]/32) + 1);
IF (m == 1) THEN i = 14 * (A174[j * 2 + 1]/64);
IF (m == 3) THEN i = i + (A174[j * 2 + 1]/32);
CALL L850;
k = j;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
k = 23 + V1;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $3F4;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
A31[j+31..j] = $6C48A50F; 
IF (m == 1) THEN A31[j+31..j] = $FFF7FFFF; 
k = 32 + V1;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
A18[9..0] = $307;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN V0, A29[V1..0], CAPTURE A31[V1..0];
STATE IDLE;
IF (A31[j] == 0) THEN V42 = 10;
IF (V42 != 0) THEN m = 2;
NEXT m;
L1192:
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 1 CYCLES, 1000 USEC, IDLE;
A17[j] = A17[j] | 8;
L1191:
IF (V42 != 0) THEN j = V1;
n = n + A25[j];
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
pop V91;
ENDPROC;
PROCEDURE L141 USES DEVICE_DATA, TEMP_DATA, L107, L458, L138, L135;
PRINT "configuring SRAM device(s)...";
CALL L107;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L146;
V77 = 0;
V78 = 0;
V30 = 0;
V186 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L142;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A43[j];
IF (j < i) THEN V186 = V186 + A92[j];
L142:
NEXT j;
IF(A92[i] == 0) THEN
GOTO L143;
PUSH i;
CALL L135;
POP i;
V187 = V186 + A92[i] - 1;
PUSH i;
CALL L138;
POP i;
L143:
V31 = V30 + A43[i] - 1;
POSTDR V78;
PUSH i;
IF (((A147[i] & 2) == 0) ||
V393) THEN
GOTO L1094;
A18[9..0] = $2EE;
CALL L458;
L1094:
IF ((A17[i] & 64) == 0) THEN
GOTO L144;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
POP i;
PUSH i;
L144:
IF (((A17[i] & 128) == 0) || (V230 == 0)) THEN
GOTO L145;
A18[9..0] = $00D;
CALL L458;
WAIT 2500 USEC;
L145:
A18[9..0] = $002;
CALL L458;
FOR i = 0 TO 20;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
POP i;
DRSCAN A43[i], A42[V31..V30];
IF (USE_REV0_PROG_ALG) THEN DRSCAN 32, A30[31..0];
PUSH i;
A18[9..0] = $004;
CALL L458;
POP i;
PREDR V77;
POSTDR V78;
DRSCAN A59[i], A29[A59[i]-1..0], CAPTURE A45[A59[i]-1..0];
IF !A45[A60[i]] THEN V42 = 10;
PUSH i;
IF (((A147[i] & 2) == 0) ||
V393) THEN
GOTO L1095;
WAIT IDLE, 8192 CYCLES, 2048 USEC, IDLE;
A18[9..0] = $1EE;
CALL L458;
L1095:
CALL L107;
POP i;
L146:
NEXT i;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
IF (V42 != 0) THEN
GOTO L147;
V76 = 1;
L147:
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC EAB1;
